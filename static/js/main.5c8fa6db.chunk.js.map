{"version":3,"sources":["utils/getContrast/getContrast.js","ScrollAnimation/DefaultStanza/DefaultStanza.js","ScrollAnimation/StanzaImage/StanzaImageUtils.js","assets/images/BlueFlowers.svg","assets/images/CaveEntrance.svg","assets/images/CherryPie.svg","assets/images/Constellation1.svg","assets/images/BlueKite.svg","assets/images/Ramen.svg","assets/images/Town.svg","assets/images/Treasure.svg","assets/images/Mountain.svg","assets/images/Sun.svg","ScrollAnimation/StanzaImage/StanzaImage.js","ScrollAnimation/Body/Body.js","ScrollAnimation/ScrollAnimation.js","ScrollAnimation/DefaultAttribution/DefaultAttribution.js","ScrollAnimation/DefaultTitle/DefaultTitle.js","ScrollAnimationCreator/Content/Content.js","ScrollAnimationCreator/Form/Form.js","ScrollAnimationCreator/testStory.js","ScrollAnimationCreator/ScrollAnimationCreator.js","App.js","index.js"],"names":["getContrast","hexcolor","slice","length","split","map","hex","join","parseInt","substr","Stanza","children","background","index","oneIndexPercent","stanzaCount","id","className","style","backgroundColor","color","fade","imageIndex","stanzaDuration","slidedown","slideup","slideleft","slideright","slidedownleft","slidedownright","slideupleft","slideupright","StanzaImage","animation","positionX","positionY","right","left","center","top","bottom","src","BlueFlowers","CaveEntrance","CherryPie","Constellation1","Kite","Ramen","Town","Treasure","Mountain","Sun","alt","Body","stanzaBackgroundColor","stanzas","defaultBackgroundColor","stanzaType","bodyAnimationString","forEach","stanza","getBodyAnimation","default","bodyBackground","images","imageObject","component","ScrollAnimation","bodyStyleMinHeight","useEffect","handleScroll","document","body","setProperty","window","pageYOffset","querySelector","offsetHeight","innerHeight","minHeight","addEventListener","removeEventListener","removeProperty","DefaultAttribution","backlink","DefaultTitle","author","Content","story","BTForm","setStory","setBackgroundColor","initialValues","onSubmit","values","value","onChange","e","target","name","stanzaHelpers","type","onClick","remove","htmlFor","placeholder","as","rows","cols","imageHelpers","image","imageindex","push","undefined","testStory","ScrollAnimationCreator","useState","pageWrapId","outerContainerId","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5c8fa6db.chunk.js","sourcesContent":["/**\n * @function getContrast\n * @description Get the contrasting color for any hex color\n * (c) 2019 Chris Ferdinandi, MIT License, https://gomakethings.com\n * Derived from work by Brian Suda, https://24ways.org/2010/calculating-color-contrast/\n * @see https://gomakethings.com/dynamically-changing-the-text-color-based-on-background-color-contrast-with-vanilla-js/\n * @param  {String} hexcolor A hexcolor value\n * @return {String} The contrasting color (black or white)\n * @since July 16, 2019\n * @author Chris Ferdinandi\n */\nexport function getContrast(hexcolor) {\n  // If a leading # is provided, remove it\n  if (hexcolor.slice(0, 1) === \"#\") {\n    hexcolor = hexcolor.slice(1);\n  }\n\n  // If a three-character hexcode, make six-character\n  if (hexcolor.length === 3) {\n    hexcolor = hexcolor\n      .split(\"\")\n      .map(function (hex) {\n        return hex + hex;\n      })\n      .join(\"\");\n  }\n\n  // Convert to RGB value\n  var r = parseInt(hexcolor.substr(0, 2), 16);\n  var g = parseInt(hexcolor.substr(2, 2), 16);\n  var b = parseInt(hexcolor.substr(4, 2), 16);\n\n  // Get YIQ ratio\n  var yiq = (r * 299 + g * 587 + b * 114) / 1000;\n\n  // Check contrast\n  return yiq >= 128 ? \"black\" : \"white\";\n}\n","import React from \"react\";\n\nimport \"./DefaultStanza.scss\";\n\nimport { getContrast } from \"../../utils/getContrast/getContrast\";\n\n/**\n * @function Stanza\n * @description One stanza of text in a scroll animation story.\n * @param props The JSX props passed to this React component\n * @param {React.Component} props.children The paragraphs to render in this\n * component\n * @param {string} props.background The background color to render on this\n * slide\n * @param {number} props.index The index of this stanza, to calculate the scroll\n * linked positioning of the element\n * @param {number} props.stanzaCount The total number of stanzas in this story\n * @param {string} props.bodyBackground The background color of the entire\n * screen for the duration this stanza is visible.\n * @author Alexander Burdiss\n * @since 6/4/21\n * @version 1.2.0\n * @component\n * @example\n * ```jsx\n * <Stanza>\n *   <p>Some text</p>\n * </Stanza>\n * ```\n */\nexport default function Stanza({ children, background, index, stanzaCount }) {\n  const oneIndexPercent = 100 / (stanzaCount + 2);\n\n  return (\n    <div>\n      <style>{`\n        #stanza${index} {\n          animation-name: stanza${index};\n          animation-duration: 1s;\n          animation-timing-function: ease-in-out;\n        }\n\n        @keyframes stanza${index} {\n          0% {\n            top: 100vh;\n          }\n          ${\n            index > 0\n              ? `${(index - 0.5) * oneIndexPercent}% {\n              top: 100vh;\n            }`\n              : \"\"\n          }\n          ${index * oneIndexPercent}% {\n            top: 34vh;\n          }\n          ${(index + 0.5) * oneIndexPercent}% {\n            top: 34vh;\n          }\n          ${(index + 1) * oneIndexPercent}% {\n            top: -100vh;\n          }\n          100% {\n            top: -100%;\n          }\n        }\n      `}</style>\n      <div\n        id={\"stanza\" + index}\n        className=\"ScrollAnimation-Stanza-Container\"\n        style={{\n          backgroundColor: background,\n          color: getContrast(background),\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n","/**\n * @function fade\n * @description Returns a string for a keyframes fade animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function fade(index, imageIndex, stanzaDuration, oneIndexPercent) {\n  return `@keyframes stanza${index}fade${imageIndex} {\n    0% {\n      opacity: 0;\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 0;\n    }\n  }`;\n}\n\n/**\n * @function slidedown\n * @description Returns a string for a keyframes slide down animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slidedown(index, imageIndex, stanzaDuration, oneIndexPercent) {\n  return `@keyframes stanza${index}slidedown${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateY(50px);\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateY(150px);\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateY(200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateY(200px);\n    }\n  }`;\n}\n\n/**\n * @function slideup\n * @description Returns a string for a keyframes slide up animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideup(index, imageIndex, stanzaDuration, oneIndexPercent) {\n  return `@keyframes stanza${index}slideup${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateY(-50px);\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateY(-150px);\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateY(-200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateY(-200px);\n    }\n  }`;\n}\n\n/**\n * @function slideleft\n * @description Returns a string for a keyframes slide left animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideleft(index, imageIndex, stanzaDuration, oneIndexPercent) {\n  return `@keyframes stanza${index}slideleft${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0);\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-50px);\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-150px);\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(-200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(-200px);\n    }\n  }`;\n}\n\n/**\n * @function slideright\n * @description Returns a string for a keyframes slide right animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideright(index, imageIndex, stanzaDuration, oneIndexPercent) {\n  return `@keyframes stanza${index}slideright${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0);\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(50px);\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(150px);\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(200px);\n    }\n  }`;\n}\n\n/**\n * @function slidedownleft\n * @description Returns a string for a keyframes slide down left animation with\n * the appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slidedownleft(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent\n) {\n  return `@keyframes stanza${index}slidedownleft${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0) translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0) translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-50px) translateY(50px);\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-150px) translateY(150px);\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(-200px) translateY(200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(-200px) translateY(200px);\n    }\n  }`;\n}\n\n/**\n * @function slidedownright\n * @description Returns a string for a keyframes slide down right animation with\n * the appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slidedownright(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent\n) {\n  return `@keyframes stanza${index}slidedownright${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0) translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0) translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(50px) translateY(50px);\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(150px) translateY(150px);\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(200px) translateY(200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(200px) translateY(200px);\n    }\n  }`;\n}\n\n/**\n * @function slideupleft\n * @description Returns a string for a keyframes slide up left animation with\n * the appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideupleft(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent\n) {\n  return `@keyframes stanza${index}slideupleft${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0) translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0) translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-50px) translateY(-50px);\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-150px) translateY(-150px);\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(-200px) translateY(-200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(-200px) translateY(-200px);\n    }\n  }`;\n}\n\n/**\n * @function slideupright\n * @description Returns a string for a keyframes slide up right animation with\n * the appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideupright(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent\n) {\n  return `@keyframes stanza${index}slideupright${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0) translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0) translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(50px) translateY(-50px);\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(150px) translateY(-150px);\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(200px) translateY(-200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(200px) translateY(-200px);\n    }\n  }`;\n}\n","export default __webpack_public_path__ + \"static/media/BlueFlowers.835c7e42.svg\";","export default __webpack_public_path__ + \"static/media/CaveEntrance.79821ad1.svg\";","export default __webpack_public_path__ + \"static/media/CherryPie.5cb58bd8.svg\";","export default __webpack_public_path__ + \"static/media/Constellation1.af64ddd2.svg\";","export default __webpack_public_path__ + \"static/media/BlueKite.7fc7089e.svg\";","export default __webpack_public_path__ + \"static/media/Ramen.2873e3b9.svg\";","export default __webpack_public_path__ + \"static/media/Town.d82e6146.svg\";","export default __webpack_public_path__ + \"static/media/Treasure.14ad7938.svg\";","export default __webpack_public_path__ + \"static/media/Mountain.14b161b9.svg\";","export default __webpack_public_path__ + \"static/media/Sun.9a0bbc72.svg\";","import React from \"react\";\n\nimport \"./StanzaImage.scss\";\nimport {\n  fade,\n  slidedown,\n  slidedownleft,\n  slidedownright,\n  slideleft,\n  slideright,\n  slideup,\n  slideupleft,\n  slideupright,\n} from \"./StanzaImageUtils\";\n\nimport BlueFlowers from \"../../assets/images/BlueFlowers.svg\";\nimport CaveEntrance from \"../../assets/images/CaveEntrance.svg\";\nimport CherryPie from \"../../assets/images/CherryPie.svg\";\nimport Constellation1 from \"../../assets/images/Constellation1.svg\";\nimport Kite from \"../../assets/images/BlueKite.svg\";\nimport Ramen from \"../../assets/images/Ramen.svg\";\nimport Town from \"../../assets/images/Town.svg\";\nimport Treasure from \"../../assets/images/Treasure.svg\";\nimport Mountain from \"../../assets/images/Mountain.svg\";\nimport Sun from \"../../assets/images/Sun.svg\";\n\n/**\n * @function stanzaImage\n * @description Displays One image for the stanza.\n * @param props The JSX props passed to this React component\n * @param {React.Component} props.children The image to render inside this\n * stanza.\n * @param {number} props.index The stanza index that this image is being\n * rendered with\n * @param {number} props.imageIndex The image index for the given stanza\n * @param {number} props.stanzaCount The number of Stanzas in this total\n * animation\n * @param {string} [props.animation='fade'] The animation type that will be\n * displayed on this component. Available animations are:\n * 'fade', 'slidedown', 'slideup', 'slideleft', 'slideright', 'slidedownleft',\n * 'slidedownright', 'slideupleft', 'slideupright'\n * @param {string} props.positionX The horizontal position of the image\n * relative to the rest of the scroll animation. Available positions are:\n * 'left', 'center', 'right'\n * @param {string} props.positionY The vertical position of the image relative\n * to the rest of the scroll animation. Available positions are:\n * 'top', 'center', 'bottom'\n * @param {number} props.stanzaDuration The number of stanzas that this image\n * should remain onscreen.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n */\nexport default function StanzaImage({\n  children,\n  index,\n  imageIndex,\n  stanzaCount,\n  animation = \"fade\",\n  positionX,\n  positionY,\n  stanzaDuration,\n}) {\n  const oneIndexPercent = 100 / (stanzaCount + 2);\n\n  return (\n    <div>\n      <style>{`\n        #stanza${index}Image${imageIndex} {\n          animation-name: stanza${index}${animation}${imageIndex};\n          animation-duration: 1s;\n          animation-timing-function: ease-in-out;\n        }\n\n        #stanza${index}Image${imageIndex} img {\n          height: 250px;\n        }\n\n        ${\n          animation === \"fade\"\n            ? fade(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n\n        ${\n          animation === \"slidedown\"\n            ? slidedown(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n\n        ${\n          animation === \"slideup\"\n            ? slideup(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n\n        ${\n          animation === \"slideleft\"\n            ? slideleft(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n\n        ${\n          animation === \"slideright\"\n            ? slideright(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n\n        ${\n          animation === \"slidedownleft\"\n            ? slidedownleft(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n\n        ${\n          animation === \"slidedownright\"\n            ? slidedownright(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n\n        ${\n          animation === \"slideupleft\"\n            ? slideupleft(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n\n        ${\n          animation === \"slideupright\"\n            ? slideupright(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n      `}</style>\n      <div\n        id={`stanza${index}Image${imageIndex}`}\n        className=\"ScrollAnimation-StanzaImage-Container\"\n        style={{\n          right: { left: \"45%\", center: \"25%\", right: \"5%\" }[positionX],\n          top: { top: \"5%\", center: \"30%\", bottom: \"55%\" }[positionY],\n        }}\n      >\n        <img\n          src={\n            {\n              \"Blue Flowers\": BlueFlowers,\n              \"Cave Entrance\": CaveEntrance,\n              \"Cherry Pie\": CherryPie,\n              \"Constellation 1\": Constellation1,\n              Kite: Kite,\n              Ramen: Ramen,\n              Town: Town,\n              Treasure: Treasure,\n              Mountain: Mountain,\n              Sun: Sun,\n            }[children]\n          }\n          alt={children}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Stanza from \"../DefaultStanza/DefaultStanza\";\nimport StanzaImage from \"../StanzaImage/StanzaImage\";\n\n/**\n * @function Body\n * @description The body of an animated story, used for grouping the logic\n * together for easier implementation of an animated story.\n * @author Alexander Burdiss\n * @since 7/8/21\n * @version 1.0.0\n * @param props The JSX props passed to this React component\n * @param {string} props.defaultBackgroundColor The default background color\n * for the body to be used when none is present on a stanza.\n * @param {string} props.stanzaBackgroundColor The default color of the stanzas\n * to be used throughout the animation.\n * @param {Object[]} props.stanzas An array of stanzas, to be iterated through\n * in the body of an animated story.\n */\nexport default function Body({\n  stanzaBackgroundColor,\n  stanzas,\n  defaultBackgroundColor,\n  stanzaType = \"default\",\n}) {\n  const oneIndexPercent = 100 / (stanzas.length + 2);\n\n  function getBodyAnimation() {\n    let bodyAnimationString = \"\";\n    stanzas.forEach((stanza, index) => {\n      bodyAnimationString += `${(index + 1) * oneIndexPercent}% {\n          background: ${\n            stanza.background ? stanza.background : defaultBackgroundColor\n          }\n        }\n        ${(index + 1.5) * oneIndexPercent}% {\n          background: ${\n            stanza.background ? stanza.background : defaultBackgroundColor\n          }\n        }\n        `;\n    });\n    return bodyAnimationString;\n  }\n\n  return (\n    <div>\n      <style>{`\n        #page {\n          animation-name: scrollBody;\n          animation-duration: 1s;\n          animation-timing-function: ease-in-out;\n        }\n\n        @keyframes scrollBody {\n          ${getBodyAnimation()}\n        }\n      `}</style>\n      {stanzas.map((stanza, index) => {\n        return (\n          <div key={index}>\n            {\n              {\n                default: (\n                  <Stanza\n                    index={index + 1}\n                    background={stanzaBackgroundColor}\n                    stanzaCount={stanzas.length}\n                    bodyBackground={\n                      stanza.background\n                        ? stanza.background\n                        : defaultBackgroundColor\n                    }\n                  >\n                    {stanza.stanza}\n                  </Stanza>\n                ),\n              }[stanzaType]\n            }\n            {stanza.images?.map((imageObject, imageIndex) => {\n              return (\n                <StanzaImage\n                  index={index + 1}\n                  imageIndex={imageIndex}\n                  stanzaCount={stanzas.length}\n                  key={\"\" + index + imageIndex}\n                  animation={imageObject.animation}\n                  positionX={imageObject.positionX}\n                  positionY={imageObject.positionY}\n                  stanzaDuration={imageObject.stanzaCount}\n                >\n                  {imageObject.component}\n                </StanzaImage>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\n\n/**\n * @function ScrollAnimation\n * @description A container for one Scroll Animation that handles the styles and\n * different logistical elements for a scroll animation poem. This should be\n * used in conjunction with `Stanza`, `Title`, and `Attribution`.\n * @param props The JSX props passed to this React component\n * @param {React.Component} props.children The parts of the poem to render on the\n * screen\n * @param {string} props.bodyStyleMinHeight The minimum height of the screen,\n * preferrably in Viewport heights that will be attached to the body.\n * @author Alexander Burdiss\n * @since 6/26/21\n * @version 1.0.0\n * @component\n * @example\n * ```jsx\n * <ScrollAnimation bodyStyleMinHeight=\"4000vh\">\n *   <Title background={stanzaBackgroundColor} author=\"Daniel Stigmon\">\n *     The Guide to Sunset\n *   </Title>\n *   {...}\n * </ScrollAnimation>\n * ```\n */\nexport default function ScrollAnimation({ children, bodyStyleMinHeight }) {\n  useEffect(() => {\n    document.querySelector(\"#page\").style.minHeight = bodyStyleMinHeight;\n    function handleScroll() {\n      document.body.style.setProperty(\n        \"--scroll\",\n        window.pageYOffset /\n          (document.querySelector(\"#page\").offsetHeight - window.innerHeight)\n      );\n    }\n    handleScroll();\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n      document.querySelector(\"#page\").style.minHeight = \"\";\n      document.body.style.removeProperty(\"--scroll\");\n    };\n  }, [bodyStyleMinHeight]);\n\n  return (\n    <div className=\"ScrollAnimation-Container\">\n      {/* Styles for the global object, just on this page */}\n      <style>{`\n        :root * {\n          /* Pause the animation */\n          animation-play-state: paused;\n          /* Bind the animation to scroll */\n          animation-delay: calc(var(--scroll) * -1s);\n          /* These last 2 properites clean up overshoot weirdness */\n          animation-iteration-count: 1;\n          animation-fill-mode: both;\n        }\n      `}</style>\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./DefaultAttribution.scss\";\n\nimport { getContrast } from \"../../utils/getContrast/getContrast\";\n\n/**\n * @namespace DefaultAttribution\n * @function DefaultAttribution\n * @description The final slide of text on a scroll animation\n * @author Alexander Burdiss\n * @since 6/5/21\n * @version 1.2.0\n * @param props The JSX props passed to this React component\n * @param {React.Component} props.children The text to render on this component\n * @param {string} props.background The background to render on this component\n * @param {number} props.stanzaCount The number of Stanzas that are in the\n * current scroll animation poem.\n */\nexport default function DefaultAttribution({\n  children,\n  background,\n  stanzaCount,\n  backlink,\n}) {\n  const oneIndexPercent = 100 / (stanzaCount + 2);\n  return (\n    <div>\n      <style>{`\n        #attribution {\n          animation-name: attribution;\n          animation-duration: 1s;\n          animation-timing-function: ease-in-out;\n        }\n\n        @keyframes attribution {\n          0% {\n            top: 100vh;\n          }\n          ${(stanzaCount + 1) * oneIndexPercent}% {\n            top: 100vh;\n          }\n          100% {\n            top: 25vh;\n          }\n        }\n      `}</style>\n      <div\n        className=\"ScrollAnimation-Attribution-Container\"\n        style={{ backgroundColor: background }}\n        id=\"attribution\"\n      >\n        <div\n          className=\"ScrollAnimation-Attribution-Border\"\n          style={{\n            color: getContrast(background),\n          }}\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./DefaultTitle.scss\";\n\nimport { getContrast } from \"../../utils/getContrast/getContrast\";\n\n/**\n * @function DefaultTitle\n * @description The title component for a scroll animation. Styled similarly to\n * a stanza\n * @author Alexander Burdiss\n * @since 6/4/21\n * @version 1.1.0\n * @param props The JSX props passed to this React component\n * @param {String} props.children The title of the scroll animation to render\n * @param {String} props.background The color of the background for this title\n * component\n * @param {String} props.author The author of the poem\n */\nexport default function DefaultTitle({ children, background, author }) {\n  return (\n    <div\n      className=\"ScrollAnimation-Title-Container\"\n      style={{\n        backgroundColor: background,\n      }}\n    >\n      <div\n        className=\"ScrollAnimation-Title-Border\"\n        style={{\n          color: getContrast(background),\n        }}\n      >\n        <h1>{children}</h1>\n        <h2>{author}</h2>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Body from \"../../ScrollAnimation/Body/Body\";\nimport ScrollAnimation from \"../../ScrollAnimation/ScrollAnimation\";\nimport Attribution from \"../../ScrollAnimation/DefaultAttribution/DefaultAttribution\";\nimport Title from \"../../ScrollAnimation/DefaultTitle/DefaultTitle\";\n\nimport \"./Content.scss\";\n\nexport default function Content({ story, backgroundColor }) {\n  const stanzaBackgroundColor = \"#8bc9e4\";\n\n  return (\n    <div id={\"page\"} className=\"Content-Wrap\">\n      <ScrollAnimation bodyStyleMinHeight={`${story.length * 100}vh`}>\n        <Title background={stanzaBackgroundColor} author=\"FostyWally\">\n          A Scroll Animation\n        </Title>\n        <Body\n          stanzas={story}\n          stanzaBackgroundColor={stanzaBackgroundColor}\n          defaultBackgroundColor={backgroundColor}\n          stanzaType=\"default\"\n        />\n        <Attribution\n          background={stanzaBackgroundColor}\n          stanzaCount={story.length}\n          backlink={\"/poems/tales/\"}\n        >\n          <p>Written by FostyWally</p>\n          <p>Animated by Captain Code 😎</p>\n        </Attribution>\n      </ScrollAnimation>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Formik, Field, Form, FieldArray } from \"formik\";\n\nimport \"./Form.scss\";\n\n/**\n * @todo Break this form up into separate components.\n *\n * @namespace Form\n * @function Form\n * @description The form that is used to create an animated story.\n * @see https://codesandbox.io/s/github/formik/formik/tree/master/examples/field-arrays?from-embed=&file=/index.js:1981-2244\n * @author Alexander Burdiss\n * @since 7/11/21\n * @version 2.0.0\n */\nexport default function BTForm({\n  story,\n  setStory,\n  backgroundColor,\n  setBackgroundColor,\n}) {\n  return (\n    <div className=\"Form-Container\">\n      <Formik\n        initialValues={{\n          stanzas: story,\n        }}\n        onSubmit={(values) => {\n          setStory(values.stanzas);\n        }}\n      >\n        {({ values }) => (\n          <>\n            <Form>\n              <div className=\"Form\">\n                <div>[Default Stanza Background Color]</div>\n                <input\n                  value={backgroundColor}\n                  onChange={(e) => setBackgroundColor(e.target.value)}\n                />\n\n                <FieldArray name=\"stanzas\">\n                  {(stanzaHelpers) => (\n                    <div>\n                      {values.stanzas.length &&\n                        values.stanzas.map((stanza, index) => (\n                          <div className=\"Form-Stanza-Container\" key={index}>\n                            <button\n                              type=\"button\"\n                              className=\"secondary\"\n                              onClick={() => stanzaHelpers.remove(index)}\n                            >\n                              X\n                            </button>\n                            <label htmlFor={`stanzas.${index}.stanza`}>\n                              Stanza\n                            </label>\n                            <Field\n                              name={`stanzas.${index}.stanza`}\n                              placeholder=\"Enter your stanza text here.\"\n                              as=\"textarea\"\n                              rows=\"6\"\n                              cols=\"30\"\n                            />\n                            <FieldArray name={`stanzas.${index}.images`}>\n                              {(imageHelpers) => (\n                                <>\n                                  {stanza.images.length\n                                    ? stanza.images.map((image, imageindex) => (\n                                        <fieldset\n                                          key={index + \"\" + imageindex}\n                                          className=\"Form-Stanza-Container\"\n                                        >\n                                          <button\n                                            type=\"button\"\n                                            className=\"secondary\"\n                                            onClick={() => {\n                                              imageHelpers.remove(imageindex);\n                                            }}\n                                          >\n                                            X\n                                          </button>\n                                          <legend>\n                                            Image {imageindex + 1}\n                                          </legend>\n                                          <div>\n                                            <label\n                                              htmlFor={`stanzas.${index}.images.${imageindex}.component`}\n                                            >\n                                              image\n                                            </label>\n                                            <Field\n                                              name={`stanzas.${index}.images.${imageindex}.component`}\n                                              as=\"select\"\n                                            >\n                                              <option>Cave Entrance</option>\n                                              <option>Blue Flowers</option>\n                                              <option>Cherry Pie</option>\n                                              <option>Constellation 1</option>\n                                              <option>Kite</option>\n                                              <option>Ramen</option>\n                                              <option>Town</option>\n                                              <option>Treasure</option>\n                                              <option>Mountain</option>\n                                              <option>Sun</option>\n                                            </Field>\n                                          </div>\n                                          <div>\n                                            <label\n                                              htmlFor={`stanzas.${index}.images.${imageindex}.positionY`}\n                                            >\n                                              positionY\n                                            </label>\n                                            <Field\n                                              name={`stanzas.${index}.images.${imageindex}.positionY`}\n                                              as=\"select\"\n                                            >\n                                              <option value=\"top\">Top</option>\n                                              <option value=\"center\">\n                                                Center\n                                              </option>\n                                              <option value=\"bottom\">\n                                                Bottom\n                                              </option>\n                                            </Field>\n                                          </div>\n                                          <div>\n                                            <label\n                                              htmlFor={`stanzas.${index}.images.${imageindex}.positionX`}\n                                            >\n                                              positionX\n                                            </label>\n                                            <Field\n                                              name={`stanzas.${index}.images.${imageindex}.positionX`}\n                                              as=\"select\"\n                                            >\n                                              <option value=\"left\">Left</option>\n                                              <option value=\"center\">\n                                                Center\n                                              </option>\n                                              <option value=\"right\">\n                                                Right\n                                              </option>\n                                            </Field>\n                                          </div>\n                                          <div>\n                                            <label\n                                              htmlFor={`stanzas.${index}.images.${imageindex}.animation`}\n                                            >\n                                              animation\n                                            </label>\n                                            <Field\n                                              name={`stanzas.${index}.images.${imageindex}.animation`}\n                                              as=\"select\"\n                                            >\n                                              <option value=\"fade\">Fade</option>\n                                              <option value=\"slidedown\">\n                                                Slide Down\n                                              </option>\n                                              <option value=\"slideup\">\n                                                Slide Up\n                                              </option>\n                                              <option value=\"slideleft\">\n                                                Slide Left\n                                              </option>\n                                              <option value=\"slideright\">\n                                                Slide Right\n                                              </option>\n                                              <option value=\"slidedownleft\">\n                                                Slide Down Left\n                                              </option>\n                                              <option value=\"slidedownright\">\n                                                Slide Down Right\n                                              </option>\n                                              <option value=\"slideupleft\">\n                                                Slide Up Left\n                                              </option>\n                                              <option value=\"slideupright\">\n                                                Slide Up Right\n                                              </option>\n                                            </Field>\n                                          </div>\n                                          <div>\n                                            <label\n                                              htmlFor={`stanzas.${index}.images.${imageindex}.stanzaCount`}\n                                            >\n                                              Stanza Count\n                                            </label>\n                                            <Field\n                                              name={`stanzas.${index}.images.${imageindex}.stanzaCount`}\n                                              type=\"number\"\n                                            />\n                                          </div>\n                                        </fieldset>\n                                      ))\n                                    : null}\n                                  <button\n                                    type=\"button\"\n                                    onClick={() =>\n                                      imageHelpers.push({\n                                        component: undefined,\n                                        positionX: \"center\",\n                                        positionY: \"center\",\n                                        animation: \"fade\",\n                                        stanzaCount: 1,\n                                      })\n                                    }\n                                  >\n                                    Add Image\n                                  </button>\n                                </>\n                              )}\n                            </FieldArray>\n                            <div>\n                              <label htmlFor={`stanzas.${index}.stanza`}>\n                                Background\n                              </label>\n                              <Field\n                                name={`stanzas.${index}.background`}\n                                type=\"text\"\n                              />\n                            </div>\n                          </div>\n                        ))}\n                      <div>\n                        <button\n                          type=\"button\"\n                          onClick={() =>\n                            stanzaHelpers.push({\n                              stanza: \"\",\n                              images: [],\n                              background: backgroundColor,\n                            })\n                          }\n                        >\n                          Add Stanza\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </FieldArray>\n              </div>\n              <button type=\"submit\" className=\"Save-Button\">\n                Save\n              </button>\n            </Form>\n          </>\n        )}\n      </Formik>\n    </div>\n  );\n}\n","export const testStory = [\n  {\n    stanza:\n      \"It's that time of day, it's the time we sit down.\\n\\nAnd watch the sun fall on our small mountain town\",\n    images: [\n      {\n        component: \"Sun\",\n        positionX: \"right\",\n        positionY: \"top\",\n        animation: \"slidedown\",\n        stanzaCount: 1,\n      },\n      {\n        component: \"Mountain\",\n        positionX: \"center\",\n        positionY: \"center\",\n        animation: \"fade\",\n        stanzaCount: 2,\n      },\n      {\n        component: \"Town\",\n        positionX: \"center\",\n        positionY: \"center\",\n        animation: \"fade\",\n        stanzaCount: 1,\n      },\n      {\n        component: \"Mountain\",\n        positionX: \"left\",\n        positionY: \"bottom\",\n        animation: \"fade\",\n        stanzaCount: 4,\n      },\n    ],\n    background: \"#8bc9e4\",\n  },\n\n  {\n    stanza:\n      \"No ones in bed, the lights barely around.\\n\\nIn this time of day there are secrets to be found.\",\n    images: [\n      {\n        component: \"Constellation 1\",\n        positionX: \"left\",\n        positionY: \"top\",\n        animation: \"slideupleft\",\n        stanzaCount: 1,\n      },\n      {\n        component: \"Blue Flowers\",\n        positionX: \"left\",\n        positionY: \"bottom\",\n        animation: \"fade\",\n        stanzaCount: 2,\n      },\n    ],\n    background: \"#41a6d3\",\n  },\n\n  {\n    stanza:\n      \"You might walk up Mt. Snark where the blue pongos grow\\n\\nAnd find an old lion with a hat made of snow\",\n    images: [],\n    background: \"#c5e4f1\",\n  },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>And if you ask him real nicely he might let you through</p>\n  //       <p>And then Into the ancient old cave of Mardue</p>\n  //     </div>\n  //   ),\n  //   images: [\n  //     {\n  //       component: <img src={CaveEntrance} alt={\"Cave Entrance\"} />,\n  //       positionX: \"center\",\n  //       positionY: \"bottom\",\n  //       animation: \"fade\",\n  //       stanzaCount: 1,\n  //     },\n  //   ],\n  //   background: \"#c5e4f1\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>Where a gentle wind guides you, you might have to run,</p>\n  //       <p>To a secret gold room, that shows only in sun. </p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"#ffef99\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>For a minute a day the door will glow bright</p>\n  //       <p>For a minute a day, all that gold is in sight.</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>Or if you like water instead of hard gold</p>\n  //       <p>There's a lake right below it, called Carrigans Hold.</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>Where the water is clear as a piece of cut glass</p>\n  //       <p>where the fish will sing songs to you, carp and the bass</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>saying “Hi there young traveller what is your name?</p>\n  //       <p>What is your secret, your dream and your game”</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>And from these three things they’ll write such a tune</p>\n  //       <p>For you and you only, or… you and the moon. </p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>Or</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>If you don’t like the dark, and would rather more playtime</p>\n  //       <p>There's a crooked old ladder that goes straight up to daytime.</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <div>\n  //         <p>The higher you climb, the higher the chances</p>\n  //         <p>Of seeing the rarest of thunder cloud dances.</p>\n  //       </div>\n  //       ,\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>They call it the Stratus, it comes once a storm</p>\n  //       <p>And the lighting, it causes the air to be warm</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>The dancing at first may not be what it seems</p>\n  //       <p>But to see two clouds dancing is a sight from a dream</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>Don’t get too close though, not even by dare</p>\n  //       <p>For too close will put quite a frizz in your hair.</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>Three more clouds up from those thunderstorm dancers</p>\n  //       <p>Is cloud 85 where one always finds answers</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>For on this cloud sits the great Faelyn the wise</p>\n  //       <p>The wisest and slyest of all in the skies.</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>“You’ll ask, where should i go, and oh what should I do?”</p>\n  //       <p>“She’ll say, that answer is one that belongs only to you.”</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>“But i can recommend a good place to get pie</p>\n  //       <p>Theres a cloud right above you called “ Pie in the Sky”</p>\n  //     </div>\n  //   ),\n  //   images: [\n  //     {\n  //       component: <img src={CherryPie} alt={\"Cherry Pie\"} />,\n  //       positionX: \"center\",\n  //       positionY: \"center\",\n  //       animation: \"fade\",\n  //       stanzaCount: 1,\n  //     },\n  //   ],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>But pie is not best to have right before bed. </p>\n  //       <p>So save it and have it for breakfast instead</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>If you want to climb higher above the pie place</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>Be careful…</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>For too high you might spend the night up in space.</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>Now, back down on earth there is lots more to find</p>\n  //       <p>Like Mrs. Cronkilver, whose so very kind</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>She’ll give you a penny for nothing at all</p>\n  //       <p>Saying this is for luck and to help you walk tall.</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>And Mr. Cronkilver, in dark lost his kite</p>\n  //       <p>He’ll ask, “Please could you go ask the sun for more light?”</p>\n  //     </div>\n  //   ),\n  //   images: [\n  //     {\n  //       component: <img src={Kite} alt={\"Kite\"} />,\n  //       positionX: \"center\",\n  //       positionY: \"center\",\n  //       animation: \"fade\",\n  //       stanzaCount: 1,\n  //     },\n  //   ],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>But...</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>The suns nearly gone now, the world has gone blue,</p>\n  //       <p>There is light though, and so there is still much to do.</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>You can try to be quick, try to find the first star</p>\n  //       <p>at this time of night, no one knows where they are.</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>They pop one by one from the haze of the sky</p>\n  //       <p>This can be slow, good thing you have pie!</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>If you find the first one, oh, then what celebration</p>\n  //       <p>You might get your very own star constellation.</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>And now the wind blows just as gently as ever</p>\n  //       <p>It’s Cooling off flowers that think they are clever</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>It’s Cooling off poodles, and freshly baked strudels</p>\n  //       <p>And Cooling down noodles and brown labradoodles</p>\n  //     </div>\n  //   ),\n  //   images: [\n  //     {\n  //       component: <img src={Ramen} alt={\"Ramen\"} />,\n  //       positionX: \"left\",\n  //       positionY: \"top\",\n  //       animation: \"fade\",\n  //       stanzaCount: 1,\n  //     },\n  //   ],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>It’s Cooling the world ‘till just it's just about cold</p>\n  //       <p>And Cooling the trees and the room full of gold</p>\n  //     </div>\n  //   ),\n  //   images: [\n  //     {\n  //       component: <img src={Treasure} alt={\"Treasure\"} />,\n  //       positionX: \"right\",\n  //       positionY: \"bottom\",\n  //       animation: \"fade\",\n  //       stanzaCount: 1,\n  //     },\n  //   ],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>Then Cooling the fish at old carrigans hold</p>\n  //       <p>And Cooling the rungs of the ladder you hold</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>You can taste the last bit of the sun as it goes</p>\n  //       <p>They say all the red makes it taste like a rose. </p>\n  //       <p>See if you smell it someday with your nose.</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>The world is cold now, but one place is warm</p>\n  //       <p>In Here far away from that big dancing storm.</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>And Under your blanket, you’ve trapped some sunlight</p>\n  //       <p>New adventures at sunrise, but for now</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n\n  // {\n  //   stanza: (\n  //     <div>\n  //       <p>Goodnight</p>\n  //     </div>\n  //   ),\n  //   images: [],\n  //   background: \"\",\n  // },\n];\n","import React, { useState } from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport Content from \"./Content/Content\";\n\nimport Form from \"./Form/Form\";\nimport \"./ScrollAnimationCreator.scss\";\n\nimport { testStory } from \"./testStory\";\n\n/**\n * @function ScrollAnimationCreator\n * @author Alexander Burdiss\n * @since 7/11/21\n * @version 1.0.0\n */\nexport default function ScrollAnimationCreator() {\n  const [story, setStory] = useState(testStory);\n  const [backgroundColor, setBackgroundColor] = useState(\"#DDDDDD\");\n\n  return (\n    <div id={\"wrapper\"}>\n      <Menu pageWrapId={\"page\"} outerContainerId={\"wrapper\"}>\n        <Form\n          story={story}\n          setStory={setStory}\n          backgroundColor={backgroundColor}\n          setBackgroundColor={setBackgroundColor}\n        />\n      </Menu>\n      <Content story={story} backgroundColor={backgroundColor} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport ScrollAnimationCreator from \"./ScrollAnimationCreator/ScrollAnimationCreator\";\n\n/**\n * @function App\n * @description The Root of the animated story creator application. This\n * component is rendered directly in strict mode in index.js\n * @author Alexander Burdiss\n * @since 7/11/21\n * @version 1.0.0\n */\nexport default function App() {\n  return (\n    <div>\n      <ScrollAnimationCreator />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}