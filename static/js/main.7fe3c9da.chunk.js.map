{"version":3,"sources":["utils/getContrast/getContrast.js","ScrollAnimation/DefaultTitle/DefaultTitle.js","ScrollAnimation/DefaultAttribution/DefaultAttribution.js","ScrollAnimation/DefaultStanza/DefaultStanza.js","ScrollAnimation/StanzaImage/animations/fade/fade.js","ScrollAnimation/StanzaImage/animations/slidedown/slidedown.js","ScrollAnimation/StanzaImage/animations/slideup/slideup.js","ScrollAnimation/StanzaImage/animations/slideleft/slideleft.js","ScrollAnimation/StanzaImage/animations/slideright/slideright.js","ScrollAnimation/StanzaImage/animations/slidedownleft/slidedownleft.js","ScrollAnimation/StanzaImage/animations/slidedownright/slidedownright.js","ScrollAnimation/StanzaImage/animations/slideupleft/slideupleft.js","ScrollAnimation/StanzaImage/animations/slideupright/slideupright.js","ScrollAnimation/StanzaImage/animations/longslideleft/longslideleft.js","ScrollAnimation/StanzaImage/animations/longslideright/longslideright.js","assets/images/AlaskaFlag.svg","assets/images/CaliforniaFlag.svg","assets/images/CitySkyline.svg","assets/images/Corn.svg","assets/images/Grass.svg","assets/images/Surfboard.svg","assets/images/Swimsuit.svg","assets/images/Umbrella.svg","assets/images/WaveOutline.svg","assets/images/BlueFlowers.svg","assets/images/CaveEntrance.svg","assets/images/CherryPie.svg","assets/images/Constellation1.svg","assets/images/BlueKite.svg","assets/images/Ramen.svg","assets/images/Town.svg","assets/images/Treasure.svg","assets/images/Mountain.svg","assets/images/Sun.svg","assets/images/ActionBox.svg","assets/images/Bed.svg","assets/images/Constellation2.svg","assets/images/Constellation3.svg","assets/images/FullMoon.svg","assets/images/Mountains.svg","assets/images/MountEverest.svg","assets/images/MusicNotes.svg","assets/images/Oak.svg","assets/images/Penny.svg","assets/images/PinkPoodle.svg","assets/images/Shrub1.svg","assets/images/Shrub2.svg","ScrollAnimation/StanzaImage/StanzaImage.js","ScrollAnimation/Body/Body.js","ScrollAnimation/ScrollAnimation.js","ScrollAnimationCreator/Form/ImageRepeatable/ImageRepeatable.js","ScrollAnimationCreator/Form/StanzaRepeatable/StanzaRepeatable.js","ScrollAnimationCreator/Form/TitleCard/TitleCard.js","ScrollAnimationCreator/Form/AttributionCard/AttributionCard.js","ScrollAnimationCreator/Form/Form.js","ScrollAnimationCreator/ScrollAnimationCreator.js","App.js","index.js"],"names":["getContrast","hexcolor","slice","length","split","map","hex","join","parseInt","substr","DefaultTitle","children","background","author","className","style","backgroundColor","id","color","DefaultAttribution","backlink","DefaultStanza","index","fade","imageIndex","stanzaDuration","oneIndexPercent","animationOverlap","indexModifiers","slidedown","slideup","slideleft","slideright","slidedownleft","slidedownright","slideupleft","slideupright","longslideleft","longslideright","StanzaImage","stanzaCount","animation","positionX","positionY","url","right","left","center","top","bottom","src","AlaskaFlag","CaliforniaFlag","CitySkyline","Corn","Grass","Surfboard","Swimsuit","Umbrella","WaveOutline","BlueFlowers","CaveEntrance","CherryPie","Constellation1","Kite","Ramen","Town","Treasure","Mountain","Sun","ActionBox","Bed","Constellation2","Constellation3","FullMoon","Mountains","MountEverest","MusicNotes","Oak","Penny","PinkPoodle","Shrub1","Shrub2","alt","Body","story","body","bodyAnimationString","titleBackground","forEach","stanza","defaultBackgroundColor","attributionBackground","getBodyAnimation","default","stanzaBackgroundColor","bodyBackground","stanzaCard","images","imageObject","component","ScrollAnimation","useEffect","bodyStyleMinHeight","handleScroll","document","setProperty","window","pageYOffset","querySelector","offsetHeight","innerHeight","minHeight","addEventListener","removeEventListener","removeProperty","font","title","titleCard","attribution","attributionCard","ImageRepeatable","imageindex","imageHelpers","select","useField","type","onClick","remove","htmlFor","name","as","disabled","value","label","StanzaRepeatable","stanzaHelpers","placeholder","rows","cols","image","push","TitleCard","AttributionCard","BTForm","setStory","useState","fileUpload","setFileUpload","useFile","reader","FileReader","onload","setFileToGlobalState","readAsText","alert","event","json","JSON","parse","target","result","triggerDownload","stringify","blob","Blob","fileDownloadUrl","URL","createObjectURL","downloadButton","href","click","initialValues","enableReinitialize","onSubmit","values","onChange","e","accept","files","display","download","Date","toLocaleDateString","toLocaleTimeString","startingObject","ScrollAnimationCreator","pageWrapId","outerContainerId","App","onbeforeunload","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7fe3c9da.chunk.js","sourcesContent":["/**\n * @function getContrast\n * @description Get the contrasting color for any hex color\n * (c) 2019 Chris Ferdinandi, MIT License, https://gomakethings.com\n * Derived from work by Brian Suda, https://24ways.org/2010/calculating-color-contrast/\n * @see https://gomakethings.com/dynamically-changing-the-text-color-based-on-background-color-contrast-with-vanilla-js/\n * @param  {String} hexcolor A hexcolor value\n * @return {String} The contrasting color (black or white)\n * @since July 16, 2019\n * @author Chris Ferdinandi\n */\nexport function getContrast(hexcolor) {\n  // If a leading # is provided, remove it\n  if (hexcolor.slice(0, 1) === \"#\") {\n    hexcolor = hexcolor.slice(1);\n  }\n\n  // If a three-character hexcode, make six-character\n  if (hexcolor.length === 3) {\n    hexcolor = hexcolor\n      .split(\"\")\n      .map(function (hex) {\n        return hex + hex;\n      })\n      .join(\"\");\n  }\n\n  // Convert to RGB value\n  var r = parseInt(hexcolor.substr(0, 2), 16);\n  var g = parseInt(hexcolor.substr(2, 2), 16);\n  var b = parseInt(hexcolor.substr(4, 2), 16);\n\n  // Get YIQ ratio\n  var yiq = (r * 299 + g * 587 + b * 114) / 1000;\n\n  // Check contrast\n  return yiq >= 128 ? \"black\" : \"white\";\n}\n","import React from \"react\";\nimport \"./DefaultTitle.scss\";\n\nimport { getContrast } from \"../../utils/getContrast/getContrast\";\n\n/**\n * @function DefaultTitle\n * @description The title component for a scroll animation. Styled similarly to\n * a stanza\n * @author Alexander Burdiss\n * @since 6/4/21\n * @version 1.2.0\n * @param props The JSX props passed to this React component\n * @param {String} props.children The title of the scroll animation to render\n * @param {String} props.background The color of the background for this title\n * component\n * @param {String} props.author The author of the poem\n * @param {number} props.stanzaCount The number of stanzas in the body\n */\nexport default function DefaultTitle({ children, background, author }) {\n  return (\n    <div\n      className=\"ScrollAnimation-Title-Container\"\n      style={{\n        backgroundColor: background,\n      }}\n      id=\"title\"\n    >\n      <div\n        className=\"ScrollAnimation-Title-Border\"\n        style={{\n          color: getContrast(background),\n        }}\n      >\n        <h1>{children}</h1>\n        <h2>{author}</h2>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./DefaultAttribution.scss\";\n\nimport { getContrast } from \"../../utils/getContrast/getContrast\";\n\n/**\n * @namespace DefaultAttribution\n * @function DefaultAttribution\n * @description The final slide of text on a scroll animation\n * @author Alexander Burdiss\n * @since 6/5/21\n * @version 1.3.0\n * @param props The JSX props passed to this React component\n * @param {React.Component} props.children The text to render on this component\n * @param {string} props.background The background to render on this component\n */\nexport default function DefaultAttribution({ children, background, backlink }) {\n  return (\n    <div\n      className=\"ScrollAnimation-Attribution-Container\"\n      style={{ backgroundColor: background }}\n      id=\"attribution\"\n    >\n      <div\n        className=\"ScrollAnimation-Attribution-Border\"\n        style={{\n          color: getContrast(background),\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./DefaultStanza.scss\";\n\nimport { getContrast } from \"../../utils/getContrast/getContrast\";\n\n/**\n * @function Stanza\n * @description One stanza of text in a scroll animation story.\n * @param props The JSX props passed to this React component\n * @param {React.Component} props.children The paragraphs to render in this\n * component\n * @param {string} props.background The background color to render on this\n * slide\n * @param {number} props.index The index of this stanza, to calculate the scroll\n * linked positioning of the element\n * @param {number} props.stanzaCount The total number of stanzas in this story\n * @param {string} props.bodyBackground The background color of the entire\n * screen for the duration this stanza is visible.\n * @author Alexander Burdiss\n * @since 6/4/21\n * @version 1.2.0\n * @component\n * @example\n * ```jsx\n * <Stanza>\n *   <p>Some text</p>\n * </Stanza>\n * ```\n */\nexport default function DefaultStanza({ children, background, index }) {\n  return (\n    <div\n      id={\"stanza\" + index}\n      className=\"ScrollAnimation-Stanza-Container\"\n      style={{\n        backgroundColor: background,\n        color: getContrast(background),\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n","/**\n * @function fade\n * @description Returns a string for a keyframes fade animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function fade(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}fade${imageIndex} {\n    0% {\n      opacity: 0;\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 0;\n    }\n  }`;\n}\n","/**\n * @function slidedown\n * @description Returns a string for a keyframes slide down animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slidedown(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}slidedown${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateY(50px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateY(125px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateY(200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateY(200px);\n    }\n  }`;\n}\n","/**\n * @function slideup\n * @description Returns a string for a keyframes slide up animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideup(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}slideup${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateY(-50px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateY(-125px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateY(-200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateY(-200px);\n    }\n  }`;\n}\n","/**\n * @function slideleft\n * @description Returns a string for a keyframes slide left animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideleft(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}slideleft${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-50px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-125px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(-200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(-200px);\n    }\n  }`;\n}\n","/**\n * @function slideright\n * @description Returns a string for a keyframes slide right animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideright(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}slideright${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(50px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(125px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(200px);\n    }\n  }`;\n}\n","/**\n * @function slidedownleft\n * @description Returns a string for a keyframes slide down left animation with\n * the appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slidedownleft(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}slidedownleft${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0) translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0) translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-50px) translateY(50px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-125px) translateY(125px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(-200px) translateY(200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(-200px) translateY(200px);\n    }\n  }`;\n}\n","/**\n * @function slidedownright\n * @description Returns a string for a keyframes slide down right animation with\n * the appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slidedownright(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}slidedownright${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0) translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0) translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(50px) translateY(50px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(125px) translateY(125px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(200px) translateY(200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(200px) translateY(200px);\n    }\n  }`;\n}\n","/**\n * @function slideupleft\n * @description Returns a string for a keyframes slide up left animation with\n * the appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideupleft(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}slideupleft${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0) translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0) translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-50px) translateY(-50px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-125px) translateY(-125px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(-200px) translateY(-200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(-200px) translateY(-200px);\n    }\n  }`;\n}\n","/**\n * @function slideupright\n * @description Returns a string for a keyframes slide up right animation with\n * the appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideupright(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}slideupright${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0) translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0) translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(50px) translateY(-50px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(125px) translateY(-125px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(200px) translateY(-200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(200px) translateY(-200px);\n    }\n  }`;\n}\n","/**\n * @function longslideleft\n * @description Returns a string for a keyframes slide left animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 8/8/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function longslideleft(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}longslideleft${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-300px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-600px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(-900px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(-900px);\n    }\n  }`;\n}\n","/**\n * @function longslideright\n * @description Returns a string for a keyframes slide left animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 8/8/21\n * @version 1.1.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @param {string} animationOverlap\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function longslideright(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent,\n  animationOverlap\n) {\n  const indexModifiers = animationOverlap === \"true\" ? [0.5, 1] : [0.25, 0.5];\n\n  return `@keyframes stanza${index}longslideright${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0);\n    }\n    ${\n      index > 0\n        ? `${(index - indexModifiers[0]) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(300px);\n    }\n    ${(index + indexModifiers[0] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(600px);\n    }\n    ${(index + indexModifiers[1] * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(900px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(900px);\n    }\n  }`;\n}\n","export default __webpack_public_path__ + \"static/media/AlaskaFlag.7e7b0af5.svg\";","export default __webpack_public_path__ + \"static/media/CaliforniaFlag.43c77053.svg\";","export default __webpack_public_path__ + \"static/media/CitySkyline.3adf5732.svg\";","export default __webpack_public_path__ + \"static/media/Corn.ee3a958f.svg\";","export default __webpack_public_path__ + \"static/media/Grass.aca7e4d2.svg\";","export default __webpack_public_path__ + \"static/media/Surfboard.9b7fcbfe.svg\";","export default __webpack_public_path__ + \"static/media/Swimsuit.5a1ae745.svg\";","export default __webpack_public_path__ + \"static/media/Umbrella.8a69f215.svg\";","export default __webpack_public_path__ + \"static/media/WaveOutline.afcbc1c9.svg\";","export default __webpack_public_path__ + \"static/media/BlueFlowers.835c7e42.svg\";","export default __webpack_public_path__ + \"static/media/CaveEntrance.79821ad1.svg\";","export default __webpack_public_path__ + \"static/media/CherryPie.5cb58bd8.svg\";","export default __webpack_public_path__ + \"static/media/Constellation1.af64ddd2.svg\";","export default __webpack_public_path__ + \"static/media/BlueKite.7fc7089e.svg\";","export default __webpack_public_path__ + \"static/media/Ramen.2873e3b9.svg\";","export default __webpack_public_path__ + \"static/media/Town.d82e6146.svg\";","export default __webpack_public_path__ + \"static/media/Treasure.14ad7938.svg\";","export default __webpack_public_path__ + \"static/media/Mountain.14b161b9.svg\";","export default __webpack_public_path__ + \"static/media/Sun.9a0bbc72.svg\";","export default __webpack_public_path__ + \"static/media/ActionBox.abbb1e96.svg\";","export default __webpack_public_path__ + \"static/media/Bed.9577669f.svg\";","export default __webpack_public_path__ + \"static/media/Constellation2.b9083cbe.svg\";","export default __webpack_public_path__ + \"static/media/Constellation3.de858f71.svg\";","export default __webpack_public_path__ + \"static/media/FullMoon.b1438497.svg\";","export default __webpack_public_path__ + \"static/media/Mountains.34c12af4.svg\";","export default __webpack_public_path__ + \"static/media/MountEverest.89cbb7f2.svg\";","export default __webpack_public_path__ + \"static/media/MusicNotes.6b696369.svg\";","export default __webpack_public_path__ + \"static/media/Oak.670a17e9.svg\";","export default __webpack_public_path__ + \"static/media/Penny.cf8190a2.svg\";","export default __webpack_public_path__ + \"static/media/PinkPoodle.e574ece7.svg\";","export default __webpack_public_path__ + \"static/media/Shrub1.8a8c754f.svg\";","export default __webpack_public_path__ + \"static/media/Shrub2.61269abb.svg\";","import React from \"react\";\n\nimport \"./StanzaImage.scss\";\n\n// Animations\nimport { fade } from \"./animations/fade/fade\";\nimport { slidedown } from \"./animations/slidedown/slidedown\";\nimport { slideup } from \"./animations/slideup/slideup\";\nimport { slideleft } from \"./animations/slideleft/slideleft\";\nimport { slideright } from \"./animations/slideright/slideright\";\nimport { slidedownleft } from \"./animations/slidedownleft/slidedownleft\";\nimport { slidedownright } from \"./animations/slidedownright/slidedownright\";\nimport { slideupleft } from \"./animations/slideupleft/slideupleft\";\nimport { slideupright } from \"./animations/slideupright/slideupright\";\nimport { longslideleft } from \"./animations/longslideleft/longslideleft\";\nimport { longslideright } from \"./animations/longslideright/longslideright\";\n\n// Newport Nebraska\nimport AlaskaFlag from \"../../assets/images/AlaskaFlag.svg\";\nimport CaliforniaFlag from \"../../assets/images/CaliforniaFlag.svg\";\nimport CitySkyline from \"../../assets/images/CitySkyline.svg\";\nimport Corn from \"../../assets/images/Corn.svg\";\nimport Grass from \"../../assets/images/Grass.svg\";\nimport Surfboard from \"../../assets/images/Surfboard.svg\";\nimport Swimsuit from \"../../assets/images/Swimsuit.svg\";\nimport Umbrella from \"../../assets/images/Umbrella.svg\";\nimport WaveOutline from \"../../assets/images/WaveOutline.svg\";\n\n// Guide to Sunset\nimport BlueFlowers from \"../../assets/images/BlueFlowers.svg\";\nimport CaveEntrance from \"../../assets/images/CaveEntrance.svg\";\nimport CherryPie from \"../../assets/images/CherryPie.svg\";\nimport Constellation1 from \"../../assets/images/Constellation1.svg\";\nimport Kite from \"../../assets/images/BlueKite.svg\";\nimport Ramen from \"../../assets/images/Ramen.svg\";\nimport Town from \"../../assets/images/Town.svg\";\nimport Treasure from \"../../assets/images/Treasure.svg\";\nimport Mountain from \"../../assets/images/Mountain.svg\";\nimport Sun from \"../../assets/images/Sun.svg\";\nimport ActionBox from \"../../assets/images/ActionBox.svg\";\nimport Bed from \"../../assets/images/Bed.svg\";\nimport Constellation2 from \"../../assets/images/Constellation2.svg\";\nimport Constellation3 from \"../../assets/images/Constellation3.svg\";\nimport FullMoon from \"../../assets/images/FullMoon.svg\";\nimport Mountains from \"../../assets/images/Mountains.svg\";\nimport MountEverest from \"../../assets/images/MountEverest.svg\";\nimport MusicNotes from \"../../assets/images/MusicNotes.svg\";\nimport Oak from \"../../assets/images/Oak.svg\";\nimport Penny from \"../../assets/images/Penny.svg\";\nimport PinkPoodle from \"../../assets/images/PinkPoodle.svg\";\nimport Shrub1 from \"../../assets/images/Shrub1.svg\";\nimport Shrub2 from \"../../assets/images/Shrub2.svg\";\n\n/**\n * NOTE: This is different than the one in the Bedtime project!\n *\n *\n * @function stanzaImage\n * @description Displays One image for the stanza.\n * @param props The JSX props passed to this React component\n * @param {React.Component} props.children The image to render inside this\n * stanza.\n * @param {number} props.index The stanza index that this image is being\n * rendered with\n * @param {number} props.imageIndex The image index for the given stanza\n * @param {number} props.stanzaCount The number of Stanzas in this total\n * animation\n * @param {string} [props.animation='fade'] The animation type that will be\n * displayed on this component. Available animations are:\n * 'fade', 'slidedown', 'slideup', 'slideleft', 'slideright', 'slidedownleft',\n * 'slidedownright', 'slideupleft', 'slideupright'\n * @param {string} props.positionX The horizontal position of the image\n * relative to the rest of the scroll animation. Available positions are:\n * 'left', 'center', 'right'\n * @param {string} props.positionY The vertical position of the image relative\n * to the rest of the scroll animation. Available positions are:\n * 'top', 'center', 'bottom'\n * @param {number} props.stanzaDuration The number of stanzas that this image\n * should remain onscreen.\n * @param {string} props.url A url to use for an external image.\n * @param {Boolean} props.animationOverlap Whether the animations should overlap\n * with the previous and next animations\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.1.0\n */\nexport default function StanzaImage({\n  children,\n  index,\n  imageIndex,\n  stanzaCount,\n  animation = \"fade\",\n  positionX,\n  positionY,\n  stanzaDuration,\n  url,\n  animationOverlap,\n}) {\n  const oneIndexPercent = 100 / (stanzaCount + 2);\n\n  return (\n    <div>\n      <style>{`\n        #stanza${index}Image${imageIndex} {\n          animation-name: stanza${index}${animation}${imageIndex};\n          animation-duration: 1s;\n          animation-timing-function: linear;\n        }\n\n        #stanza${index}Image${imageIndex} img {\n          height: 250px;\n        }\n\n        ${\n          animation === \"fade\"\n            ? fade(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"slidedown\"\n            ? slidedown(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"slideup\"\n            ? slideup(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"slideleft\"\n            ? slideleft(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"slideright\"\n            ? slideright(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"slidedownleft\"\n            ? slidedownleft(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"slidedownright\"\n            ? slidedownright(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"slideupleft\"\n            ? slideupleft(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"slideupright\"\n            ? slideupright(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"longslideleft\"\n            ? longslideleft(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n\n        ${\n          animation === \"longslideright\"\n            ? longslideright(\n                index,\n                imageIndex,\n                stanzaDuration,\n                oneIndexPercent,\n                animationOverlap\n              )\n            : \"\"\n        }\n      `}</style>\n      <div\n        id={`stanza${index}Image${imageIndex}`}\n        className=\"ScrollAnimation-StanzaImage-Container\"\n        style={{\n          right: { left: \"45%\", center: \"25%\", right: \"5%\" }[positionX],\n          top: { top: \"5%\", center: \"30%\", bottom: \"55%\" }[positionY],\n        }}\n      >\n        <img\n          src={\n            {\n              url: url,\n              // Newport Nebraska\n              \"Alaska Flag\": AlaskaFlag,\n              \"California Flag\": CaliforniaFlag,\n              \"City Skyline\": CitySkyline,\n              Corn: Corn,\n              Grass: Grass,\n              Surfboard: Surfboard,\n              Swimsuit: Swimsuit,\n              Umbrella: Umbrella,\n              \"Wave Outline\": WaveOutline,\n              // Guide to Sunset\n              \"Blue Flowers\": BlueFlowers,\n              \"Cave Entrance\": CaveEntrance,\n              \"Cherry Pie\": CherryPie,\n              \"Constellation 1\": Constellation1,\n              Kite: Kite,\n              Ramen: Ramen,\n              Town: Town,\n              Treasure: Treasure,\n              Mountain: Mountain,\n              Sun: Sun,\n              \"Action Box\": ActionBox,\n              Bed: Bed,\n              \"Constellation 2\": Constellation2,\n              \"Constellation 3\": Constellation3,\n              \"Full Moon\": FullMoon,\n              Mountains: Mountains,\n              \"Mount Everest\": MountEverest,\n              \"Music Notes\": MusicNotes,\n              Oak: Oak,\n              Penny: Penny,\n              \"Pink Poodle\": PinkPoodle,\n              \"Shrub 1\": Shrub1,\n              \"Shrub 2\": Shrub2,\n            }[children]\n          }\n          alt={children}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport DefaultStanza from \"../DefaultStanza/DefaultStanza\";\nimport StanzaImage from \"../StanzaImage/StanzaImage\";\n\n/**\n * @function Body\n * @description The body of an animated story, used for grouping the logic\n * together for easier implementation of an animated story.\n * @author Alexander Burdiss\n * @since 7/8/21\n * @version 2.0.0\n * @param props The JSX props passed to this React component\n * @param {Object[]} props.story The story object with all of the config baked\n * in.\n */\nexport default function Body({ story }) {\n  const oneIndexPercent = 100 / (story.body.length + 2);\n\n  function getBodyAnimation() {\n    let bodyAnimationString = `0% {\n      background: ${story.titleBackground}\n    }\n    `;\n    story.body.forEach((stanza, index) => {\n      bodyAnimationString += `${(index + 1) * oneIndexPercent}% {\n          background: ${\n            stanza.background ? stanza.background : story.defaultBackgroundColor\n          }\n        }\n        ${(index + 1.5) * oneIndexPercent}% {\n          background: ${\n            stanza.background ? stanza.background : story.defaultBackgroundColor\n          }\n        }\n        `;\n    });\n    bodyAnimationString += `100% {\n      background: ${story.attributionBackground}\n    }`;\n    return bodyAnimationString;\n  }\n\n  return (\n    <div>\n      <style>{`\n        #page {\n          animation-name: scrollBody;\n          animation-duration: 1s;\n          animation-timing-function: ease-in-out;\n        }\n\n        @keyframes scrollBody {\n          ${getBodyAnimation()}\n        }\n      `}</style>\n      {story.body.map((stanza, index) => {\n        return (\n          <div key={index}>\n            <style>{`\n              #stanza${index + 1} {\n                animation-name: stanza${index + 1};\n                animation-duration: 1s;\n                animation-timing-function: ease-in-out;\n              }\n\n              @keyframes stanza${index + 1} {\n                0% {\n                  top: 100vh;\n                }\n                ${\n                  index + 1 > 0\n                    ? `${(index + 1 - 0.5) * oneIndexPercent}% {\n                    top: 100vh;\n                  }`\n                    : \"\"\n                }\n                ${(index + 1) * oneIndexPercent}% {\n                  top: 34vh;\n                }\n                ${(index + 1 + 0.5) * oneIndexPercent}% {\n                  top: 34vh;\n                }\n                ${(index + 1 + 1) * oneIndexPercent}% {\n                  top: -100vh;\n                }\n                100% {\n                  top: -100%;\n                }\n              }\n            `}</style>\n            {\n              {\n                default: (\n                  <DefaultStanza\n                    index={index + 1}\n                    background={story.stanzaBackgroundColor}\n                    bodyBackground={\n                      stanza.background\n                        ? stanza.background\n                        : story.defaultBackgroundColor\n                    }\n                  >\n                    {stanza.stanza}\n                  </DefaultStanza>\n                ),\n              }[story.stanzaCard]\n            }\n            {stanza.images?.map((imageObject, imageIndex) => {\n              return (\n                <StanzaImage\n                  index={index + 1}\n                  imageIndex={imageIndex}\n                  stanzaCount={story.body.length}\n                  key={\"\" + index + imageIndex}\n                  animation={imageObject.animation}\n                  positionX={imageObject.positionX}\n                  positionY={imageObject.positionY}\n                  stanzaDuration={imageObject.stanzaCount}\n                  url={imageObject.url}\n                  animationOverlap={story.animationOverlap}\n                >\n                  {imageObject.component}\n                </StanzaImage>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport DefaultTitle from \"./DefaultTitle/DefaultTitle\";\nimport DefaultAttribution from \"./DefaultAttribution/DefaultAttribution\";\nimport Body from \"./Body/Body\";\n\n/**\n * @function ScrollAnimation\n * @description A container for one Scroll Animation that handles the styles and\n * different logistical elements for a scroll animation poem. This should be\n * used in conjunction with `Stanza`, `Title`, and `Attribution`.\n * @param props The JSX props passed to this React component\n * @param {React.Component} props.children The parts of the poem to render on the\n * screen\n * @param {string} props.bodyStyleMinHeight The minimum height of the screen,\n * preferrably in Viewport heights that will be attached to the body.\n * @author Alexander Burdiss\n * @since 6/26/21\n * @version 1.1.0\n * @component\n * @example\n * <ScrollAnimation story={story}/>\n */\nexport default function ScrollAnimation({ story }) {\n  const oneIndexPercent = 100 / (story.body.length + 2);\n\n  useEffect(() => {\n    const bodyStyleMinHeight = `${story.body.length * 100}vh`;\n    document.querySelector(\"#page\").style.minHeight = bodyStyleMinHeight;\n    function handleScroll() {\n      document.body.style.setProperty(\n        \"--scroll\",\n        window.pageYOffset /\n          (document.querySelector(\"#page\").offsetHeight - window.innerHeight)\n      );\n    }\n    handleScroll();\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n      document.querySelector(\"#page\").style.minHeight = \"\";\n      document.body.style.removeProperty(\"--scroll\");\n    };\n  }, [story.body.length]);\n\n  return (\n    <div className=\"ScrollAnimation-Container\">\n      {/* Styles for the global object, just on this page */}\n      <style>{`\n        .ScrollAnimation-Container {\n          font-family: ${story.font}\n        }\n\n        :root * {\n          /* Pause the animation */\n          animation-play-state: paused;\n          /* Bind the animation to scroll */\n          animation-delay: calc(var(--scroll) * -1s);\n          /* These last 2 properites clean up overshoot weirdness */\n          animation-iteration-count: 1;\n          animation-fill-mode: both;\n        }\n\n        #title {\n          animation-name: title;\n          animation-duration: 1s;\n          animation-timing-function: ease-in-out;\n        }\n\n        @keyframes title {\n          0% {\n            top: 34vh;\n          }\n          ${oneIndexPercent}% {\n            top: -100vh;\n          }\n          100% {\n            top: -100vh;\n          }\n        }\n      `}</style>\n      {\n        {\n          default: (\n            <DefaultTitle\n              background={story.stanzaBackgroundColor}\n              author={story.author}\n            >\n              {story.title}\n            </DefaultTitle>\n          ),\n        }[story.titleCard]\n      }\n      <Body story={story} />\n      <style>{`\n        #attribution {\n          animation-name: attribution;\n          animation-duration: 1s;\n          animation-timing-function: ease-in-out;\n        }\n\n        @keyframes attribution {\n          0% {\n            top: 100vh;\n          }\n          ${(story.body.length + 1) * oneIndexPercent}% {\n            top: 100vh;\n          }\n          100% {\n            top: 25vh;\n          }\n        }\n      `}</style>\n      {\n        {\n          default: (\n            <DefaultAttribution\n              background={story.stanzaBackgroundColor}\n              backlink={\"/poems/tales/\"}\n            >\n              {story.attribution}\n            </DefaultAttribution>\n          ),\n        }[story.attributionCard]\n      }\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Field, useField } from \"formik\";\n\n/**\n * @namespace ImageRepeatable\n * @function ImageRepeatable\n * @description A repeatable image form field.\n * @author Alexander Burdiss\n * @since 8/1/21\n * @version 1.0.0\n * @param {*} props The JSX props passed to this React component\n * @param {number} props.index The index of the stanza this image form section\n * is in\n * @param {number} props.imageindex The index that this image is in the form\n * @param {Object} props.imageHelpers A collection of functions that can adjust\n * the form layout in relation to these images.\n */\nexport default function ImageRepeatable({ index, imageindex, imageHelpers }) {\n  const select = useField(`story.body.${index}.images.${imageindex}.component`);\n  return (\n    <fieldset key={index + \"\" + imageindex} className=\"Form-Image-Container\">\n      <button\n        type=\"button\"\n        className=\"secondary\"\n        onClick={() => {\n          imageHelpers.remove(imageindex);\n        }}\n      >\n        X\n      </button>\n      <legend className=\"blue\">Image {imageindex + 1}</legend>\n      <div className=\"Label-Input-Group First\">\n        <label htmlFor={`story.body.${index}.images.${imageindex}.component`}>\n          Image\n        </label>\n        <Field\n          name={`story.body.${index}.images.${imageindex}.component`}\n          as=\"select\"\n        >\n          <option disabled value=\"null\">\n            -- select an option --\n          </option>\n          <option value=\"url\">From URL</option>\n          <optgroup label=\"Newport Nebraska\">\n            <option>Alaska Flag</option>\n            <option>California Flag</option>\n            <option>City Skyline</option>\n            <option>Corn</option>\n            <option>Grass</option>\n            <option>Surfboard</option>\n            <option>Swimsuit</option>\n            <option>Umbrella</option>\n            <option>Wave Outline</option>\n          </optgroup>\n          <optgroup label=\"Guide to Sunset\">\n            <option>Action Box</option>\n            <option>Bed</option>\n            <option>Blue Flowers</option>\n            <option>Cave Entrance</option>\n            <option>Cherry Pie</option>\n            <option>Constellation 1</option>\n            <option>Constellation 2</option>\n            <option>Constellation 3</option>\n            <option>Full Moon</option>\n            <option>Kite</option>\n            <option>Mountain</option>\n            <option>Mountains</option>\n            <option>Mount Everest</option>\n            <option>Music Notes</option>\n            <option>Oak</option>\n            <option>Penny</option>\n            <option>Pink Poodle</option>\n            <option>Ramen</option>\n            <option>Shrub 1</option>\n            <option>Shrub 2</option>\n            <option>Sun</option>\n            <option>Town</option>\n            <option>Treasure</option>\n          </optgroup>\n        </Field>\n      </div>\n      <div\n        className={`Label-Input-Group ${\n          select[0]?.value === \"url\" ? \"\" : \"hidden\"\n        }`}\n      >\n        <label htmlFor={`story.body.${index}.images.${imageindex}.url`}>\n          URL\n        </label>\n        <Field\n          name={`story.body.${index}.images.${imageindex}.url`}\n          type=\"url\"\n          id=\"UrlInput\"\n        />\n      </div>\n      <div className=\"Label-Input-Group\">\n        <label htmlFor={`story.body.${index}.images.${imageindex}.positionY`}>\n          Vertical\n        </label>\n        <Field\n          name={`story.body.${index}.images.${imageindex}.positionY`}\n          as=\"select\"\n        >\n          <option value=\"top\">Top</option>\n          <option value=\"center\">Center</option>\n          <option value=\"bottom\">Bottom</option>\n        </Field>\n      </div>\n      <div className=\"Label-Input-Group\">\n        <label htmlFor={`story.body.${index}.images.${imageindex}.positionX`}>\n          Horizontal\n        </label>\n        <Field\n          name={`story.body.${index}.images.${imageindex}.positionX`}\n          as=\"select\"\n        >\n          <option value=\"left\">Left</option>\n          <option value=\"center\">Center</option>\n          <option value=\"right\">Right</option>\n        </Field>\n      </div>\n      <div className=\"Label-Input-Group\">\n        <label htmlFor={`story.body.${index}.images.${imageindex}.animation`}>\n          Animation\n        </label>\n        <Field\n          name={`story.body.${index}.images.${imageindex}.animation`}\n          as=\"select\"\n        >\n          <option value=\"fade\">Fade</option>\n          <option value=\"slidedown\">Slide Down</option>\n          <option value=\"slideup\">Slide Up</option>\n          <option value=\"slideleft\">Slide Left</option>\n          <option value=\"slideright\">Slide Right</option>\n          <option value=\"longslideleft\">Long Slide Left</option>\n          <option value=\"longslideright\">Long Slide Right</option>\n          <option value=\"slidedownleft\">Slide Down Left</option>\n          <option value=\"slidedownright\">Slide Down Right</option>\n          <option value=\"slideupleft\">Slide Up Left</option>\n          <option value=\"slideupright\">Slide Up Right</option>\n        </Field>\n      </div>\n      <div className=\"Label-Input-Group\">\n        <label htmlFor={`story.body.${index}.images.${imageindex}.stanzaCount`}>\n          Stanza Count\n        </label>\n        <Field\n          name={`story.body.${index}.images.${imageindex}.stanzaCount`}\n          type=\"number\"\n        />\n      </div>\n    </fieldset>\n  );\n}\n","import React from \"react\";\n\nimport { Field, FieldArray } from \"formik\";\nimport ImageRepeatable from \"../ImageRepeatable/ImageRepeatable\";\n\n/**\n * @namespace StanzaRepeatable\n * @description A repeatable stanza, that provides all of the options for a\n * stanza on the form.\n * @author Alexander Burdiss\n * @since 8/1/21\n * @version 1.0.0\n * @param {*} props The JSX props passed to this React component\n * @param {number} props.index The index of this stanza in the form\n * @param {Object} props.stanza The object containing the data for this stanza\n * @param {Object} props.stanzaHelpers The functions handling adjusting the\n * form layout for the stanzas\n */\nexport default function StanzaRepeatable({ index, stanza, stanzaHelpers }) {\n  return (\n    <div className=\"Form-Stanza-Container\" key={index}>\n      <button\n        type=\"button\"\n        className=\"secondary\"\n        onClick={() => stanzaHelpers.remove(index)}\n      >\n        X\n      </button>\n      <label htmlFor={`story.body.${index}.stanza`} className=\"blue\">\n        Stanza {index + 1}\n      </label>\n      <Field\n        name={`story.body.${index}.stanza`}\n        placeholder=\"Enter your stanza text here.\"\n        as=\"textarea\"\n        rows=\"6\"\n        cols=\"30\"\n      />\n      <FieldArray name={`story.body.${index}.images`}>\n        {(imageHelpers) => (\n          <>\n            {stanza.images.length\n              ? stanza.images.map((image, imageindex) => (\n                  <ImageRepeatable\n                    key={index + \"\" + imageindex}\n                    index={index}\n                    imageindex={imageindex}\n                    imageHelpers={imageHelpers}\n                  />\n                ))\n              : null}\n            <button\n              type=\"button\"\n              onClick={() =>\n                imageHelpers.push({\n                  component: \"null\",\n                  url: \"\",\n                  positionX: \"center\",\n                  positionY: \"center\",\n                  animation: \"fade\",\n                  stanzaCount: 1,\n                })\n              }\n            >\n              Add Image\n            </button>\n          </>\n        )}\n      </FieldArray>\n      <div className=\"Background-Label-Input\">\n        <label htmlFor={`story.body.${index}.stanza`}>Background</label>\n        <Field name={`story.body.${index}.background`} type=\"color\" />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Field } from \"formik\";\n\n/**\n * @namespace TitleCard\n * @function TitleCard\n * @description Provides the options on the form for the title card.\n * @author Alexander Burdiss\n * @since 8/8/21\n * @version 1.1.0\n */\nexport default function TitleCard() {\n  return (\n    <div className=\"Form-Stanza-Container\">\n      <div className=\"blue\">Title Card</div>\n      <div className=\"Title-Input-Group\">\n        <label htmlFor={\"story.titleCard\"}>Card Style</label>\n        <Field name={\"story.titleCard\"} as=\"select\">\n          <option value=\"default\">Default</option>\n        </Field>\n      </div>\n      <div className=\"Title-Input-Group\">\n        <label htmlFor={\"story.title\"}>Title</label>\n        <Field name=\"story.title\"></Field>\n      </div>\n      <div className=\"Title-Input-Group\">\n        <label htmlFor={\"story.author\"}>Author</label>\n        <Field name=\"story.author\"></Field>\n      </div>\n      <div className=\"Background-Label-Input\">\n        <label htmlFor={\"story.titleBackground\"}>Background</label>\n        <Field name={\"story.titleBackground\"} type=\"color\" />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Field } from \"formik\";\n\n/**\n * @namespace AttributionCard\n * @function AttributionCard\n * @description Provides the options on the form for the attribution card.\n * @author Alexander Burdiss\n * @since 8/8/21\n * @version 1.1.0\n */\nexport default function AttributionCard() {\n  return (\n    <div className=\"Form-Stanza-Container\">\n      <div className=\"blue\">Attribution Card</div>\n      <div className=\"Title-Input-Group\">\n        <label htmlFor={\"story.attributionCard\"}>Card Style</label>\n        <Field name={\"story.attributionCard\"} as=\"select\">\n          <option value=\"default\">Default</option>\n        </Field>\n      </div>\n      <div>\n        <label htmlFor={\"story.attribution\"}>Attributions</label>\n        <Field\n          name=\"story.attribution\"\n          as=\"textarea\"\n          rows=\"4\"\n          cols=\"30\"\n        ></Field>\n      </div>\n      <div className=\"Background-Label-Input\">\n        <label htmlFor={\"story.attributionBackground\"}>Background</label>\n        <Field name={\"story.attributionBackground\"} type=\"color\" />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Formik, Form, FieldArray, Field } from \"formik\";\n\nimport \"./Form.scss\";\nimport StanzaRepeatable from \"./StanzaRepeatable/StanzaRepeatable\";\nimport TitleCard from \"./TitleCard/TitleCard\";\nimport AttributionCard from \"./AttributionCard/AttributionCard\";\n\n/**\n * @namespace Form\n * @function Form\n * @description The form that is used to create an animated story.\n * @see https://codesandbox.io/s/github/formik/formik/tree/master/examples/field-arrays?from-embed=&file=/index.js:1981-2244\n * @author Alexander Burdiss\n * @since 7/11/21\n * @version 2.0.1\n */\nexport default function BTForm({ story, setStory }) {\n  const [fileUpload, setFileUpload] = useState(null);\n\n  /**\n   * @function Form~useFile\n   * @description Sets the uploaded file to the state variable, and calls\n   * a function to load that file into state.\n   * @author Alexander Burdiss\n   * @since 7/20/21\n   * @version 1.0.0\n   */\n  function useFile() {\n    if (fileUpload != null) {\n      const reader = new FileReader();\n      reader.onload = setFileToGlobalState;\n      reader.readAsText(fileUpload);\n    } else {\n      alert(\"Upload a file first!\");\n    }\n  }\n\n  /**\n   * @function setFileToGlobalState\n   * @description Loads the uploaded file into global state.\n   * @param {event} event The event that triggered the FileReader\n   * @author Alexander Burdiss\n   * @since 7/20/21\n   * @version 1.0.0\n   */\n  function setFileToGlobalState(event) {\n    const json = JSON.parse(event.target.result);\n    setStory(json);\n  }\n\n  /**\n   * @function Form~triggerDownload\n   * @description Creates a new JSON blob from the state object, and downloads\n   * it.\n   * @author Alexander Burdiss\n   * @since 7/20/21\n   * @version 1.0.0\n   */\n  function triggerDownload() {\n    const json = JSON.stringify(story);\n    const blob = new Blob([json]);\n    const fileDownloadUrl = URL.createObjectURL(blob);\n    const downloadButton = document.querySelector(\"#downloadLink\");\n    downloadButton.href = fileDownloadUrl;\n    downloadButton.click();\n  }\n\n  return (\n    <div className=\"Form-Container\">\n      <Formik\n        initialValues={{\n          story: story,\n        }}\n        enableReinitialize\n        onSubmit={(values) => {\n          setStory(values.story);\n        }}\n      >\n        {({ values }) => (\n          <>\n            <Form>\n              <div className=\"Form\">\n                <div className=\"Default-Option\">\n                  <label htmlFor=\"defaultBackground\">Default Background</label>\n                  <input\n                    id=\"defaultBackground\"\n                    type=\"color\"\n                    value={values.story.defaultBackgroundColor}\n                    onChange={(e) => {\n                      setStory(() => {\n                        return {\n                          ...values.story,\n                          defaultBackgroundColor: e.target.value,\n                        };\n                      });\n                    }}\n                  />\n                </div>\n\n                <div className=\"Default-Option\">\n                  <label htmlFor=\"cardBackground\">Card Background</label>\n                  <input\n                    id=\"cardBackground\"\n                    type=\"color\"\n                    value={values.story.stanzaBackgroundColor}\n                    onChange={(e) =>\n                      setStory(() => {\n                        return {\n                          ...values.story,\n                          stanzaBackgroundColor: e.target.value,\n                        };\n                      })\n                    }\n                  />\n                </div>\n\n                <div className=\"Default-Option\">\n                  <div>\n                    <label htmlFor={\"story.stanzaCard\"}>\n                      Stanza Card Style\n                    </label>\n                  </div>\n                  <Field name={\"story.stanzaCard\"} as=\"select\">\n                    <option value=\"default\">Default</option>\n                  </Field>\n                </div>\n\n                <div className=\"Default-Option\">\n                  <div>\n                    <label htmlFor={\"story.font\"}>Font</label>\n                  </div>\n                  <Field name={\"story.font\"} as=\"select\">\n                    <option>Lora</option>\n                    <option>Ubuntu</option>\n                    <option>Indie Flower</option>\n                    <option>Quicksand</option>\n                  </Field>\n                </div>\n\n                <div className=\"Default-Option\">\n                  <div>\n                    <label htmlFor={\"story.animationOverlap\"}>\n                      Animation Overlap\n                    </label>\n                  </div>\n                  <Field name={\"story.animationOverlap\"} as=\"select\">\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </Field>\n                </div>\n\n                <TitleCard />\n\n                <FieldArray name=\"story.body\">\n                  {(stanzaHelpers) => (\n                    <div>\n                      {values.story.body?.length\n                        ? values.story.body.map((stanza, index) => (\n                            <StanzaRepeatable\n                              key={index}\n                              index={index}\n                              stanza={stanza}\n                              stanzaHelpers={stanzaHelpers}\n                            />\n                          ))\n                        : null}\n                      <div>\n                        <button\n                          type=\"button\"\n                          onClick={() =>\n                            stanzaHelpers.push({\n                              stanza: \"\",\n                              images: [],\n                              background: values.story.defaultBackgroundColor,\n                            })\n                          }\n                        >\n                          Add Stanza\n                        </button>\n                      </div>\n                      <AttributionCard />\n                    </div>\n                  )}\n                </FieldArray>\n              </div>\n              <div className=\"Save-Button-Container\">\n                <input\n                  className=\"File-Upload\"\n                  type=\"file\"\n                  accept=\"application/json\"\n                  onChange={(event) => setFileUpload(event.target.files[0])}\n                />\n                <button type=\"button\" className=\"Save-Button\" onClick={useFile}>\n                  Upload\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"Save-Button\"\n                  onClick={triggerDownload}\n                >\n                  Download\n                </button>\n                <button type=\"submit\" className=\"Save-Button Green-Button\">\n                  Render\n                </button>\n              </div>\n              {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n              <a\n                style={{ display: \"none\" }}\n                download={`story${new Date().toLocaleDateString()}${new Date().toLocaleTimeString()}.json`}\n                href={\"\"}\n                id=\"downloadLink\"\n              >\n                download it\n              </a>\n            </Form>\n          </>\n        )}\n      </Formik>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport ScrollAnimation from \"../ScrollAnimation/ScrollAnimation\";\n\nimport Form from \"./Form/Form\";\nimport \"./ScrollAnimationCreator.scss\";\n// import { testStory } from \"./testStory\";\n\nconst startingObject = {\n  defaultBackgroundColor: \"#FFFFFF\",\n  stanzaBackgroundColor: \"#FFFFFF\",\n  animationOverlap: \"false\",\n  title: \"\",\n  titleBackground: \"#FFFFFF\",\n  author: \"\",\n  titleCard: \"default\",\n  attributionCard: \"default\",\n  attributionBackground: \"#FFFFFF\",\n  stanzaCard: \"default\",\n  attribution: \"\",\n  body: [],\n};\n\n/**\n * @function ScrollAnimationCreator\n * @author Alexander Burdiss\n * @since 7/11/21\n * @version 1.1.0\n */\nexport default function ScrollAnimationCreator() {\n  const [story, setStory] = useState(startingObject);\n\n  return (\n    <div id={\"wrapper\"}>\n      <Menu pageWrapId={\"page\"} outerContainerId={\"wrapper\"}>\n        <Form story={story} setStory={setStory} />\n      </Menu>\n      <div id={\"page\"} className=\"Content-Wrap\">\n        <ScrollAnimation story={story} />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport ScrollAnimationCreator from \"./ScrollAnimationCreator/ScrollAnimationCreator\";\n\n/**\n * @function App\n * @description The Root of the animated story creator application. This\n * component is rendered directly in strict mode in index.js\n * @author Alexander Burdiss\n * @since 7/11/21\n * @version 1.0.0\n */\nexport default function App() {\n  useEffect(\n    /**\n     * @function App~setupComponent\n     * @description This funciton handles all initial setup features of the app.\n     * @author Alexander Burdiss\n     * @since 8/24/21\n     * @version 1.0.0\n     */\n    function setupComponent() {\n      window.onbeforeunload = function () {\n        return \"All unsaved data will be lost!\";\n      };\n    },\n    []\n  );\n\n  return (\n    <div>\n      <ScrollAnimationCreator />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}