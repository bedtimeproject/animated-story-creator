{"version":3,"sources":["utils/getContrast/getContrast.js","ScrollAnimation/DefaultStanza/DefaultStanza.js","ScrollAnimation/StanzaImage/animations/fade/fade.js","ScrollAnimation/StanzaImage/animations/slidedown/slidedown.js","ScrollAnimation/StanzaImage/animations/slideup/slideup.js","ScrollAnimation/StanzaImage/animations/slideleft/slideleft.js","ScrollAnimation/StanzaImage/animations/slideright/slideright.js","ScrollAnimation/StanzaImage/animations/slidedownleft/slidedownleft.js","ScrollAnimation/StanzaImage/animations/slidedownright/slidedownright.js","ScrollAnimation/StanzaImage/animations/slideupleft/slideupleft.js","ScrollAnimation/StanzaImage/animations/slideupright/slideupright.js","assets/images/AlaskaFlag.svg","assets/images/CaliforniaFlag.svg","assets/images/CitySkyline.svg","assets/images/Corn.svg","assets/images/Grass.svg","assets/images/Surfboard.svg","assets/images/Swimsuit.svg","assets/images/Umbrella.svg","assets/images/WaveOutline.svg","assets/images/BlueFlowers.svg","assets/images/CaveEntrance.svg","assets/images/CherryPie.svg","assets/images/Constellation1.svg","assets/images/BlueKite.svg","assets/images/Ramen.svg","assets/images/Town.svg","assets/images/Treasure.svg","assets/images/Mountain.svg","assets/images/Sun.svg","assets/images/ActionBox.svg","assets/images/Bed.svg","assets/images/Constellation2.svg","assets/images/Constellation3.svg","assets/images/FullMoon.svg","assets/images/Mountains.svg","assets/images/MountEverest.svg","assets/images/MusicNotes.svg","assets/images/Oak.svg","assets/images/Penny.svg","assets/images/PinkPoodle.svg","assets/images/Shrub1.svg","assets/images/Shrub2.svg","ScrollAnimation/StanzaImage/StanzaImage.js","ScrollAnimation/Body/Body.js","ScrollAnimation/ScrollAnimation.js","ScrollAnimation/DefaultAttribution/DefaultAttribution.js","ScrollAnimation/DefaultTitle/DefaultTitle.js","ScrollAnimationCreator/Content/Content.js","ScrollAnimationCreator/Form/ImageRepeatable/ImageRepeatable.js","ScrollAnimationCreator/Form/StanzaRepeatable/StanzaRepeatable.js","ScrollAnimationCreator/Form/Form.js","ScrollAnimationCreator/ScrollAnimationCreator.js","App.js","index.js"],"names":["getContrast","hexcolor","slice","length","split","map","hex","join","parseInt","substr","Stanza","children","background","index","oneIndexPercent","stanzaCount","id","className","style","backgroundColor","color","fade","imageIndex","stanzaDuration","slidedown","slideup","slideleft","slideright","slidedownleft","slidedownright","slideupleft","slideupright","StanzaImage","animation","positionX","positionY","right","left","center","top","bottom","src","AlaskaFlag","CaliforniaFlag","CitySkyline","Corn","Grass","Surfboard","Swimsuit","Umbrella","WaveOutline","BlueFlowers","CaveEntrance","CherryPie","Constellation1","Kite","Ramen","Town","Treasure","Mountain","Sun","ActionBox","Bed","Constellation2","Constellation3","FullMoon","Mountains","MountEverest","MusicNotes","Oak","Penny","PinkPoodle","Shrub1","Shrub2","alt","Body","stanzaBackgroundColor","stanzas","defaultBackgroundColor","stanzaType","bodyAnimationString","forEach","stanza","getBodyAnimation","default","bodyBackground","images","imageObject","component","ScrollAnimation","bodyStyleMinHeight","useEffect","handleScroll","document","body","setProperty","window","pageYOffset","querySelector","offsetHeight","innerHeight","minHeight","addEventListener","removeEventListener","removeProperty","DefaultAttribution","backlink","DefaultTitle","author","Content","story","ImageRepeatable","imageindex","imageHelpers","type","onClick","remove","htmlFor","name","as","label","value","StanzaRepeatable","stanzaHelpers","placeholder","rows","cols","image","push","undefined","BTForm","setStory","setBackgroundColor","useState","fileUpload","setFileUpload","useFile","reader","FileReader","onload","setFileToGlobalState","readAsText","alert","event","json","JSON","parse","target","result","triggerDownload","stringify","blob","Blob","fileDownloadUrl","URL","createObjectURL","downloadButton","href","click","initialValues","enableReinitialize","onSubmit","values","onChange","e","accept","files","display","download","Date","toLocaleDateString","toLocaleTimeString","ScrollAnimationCreator","pageWrapId","outerContainerId","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.48094320.chunk.js","sourcesContent":["/**\n * @function getContrast\n * @description Get the contrasting color for any hex color\n * (c) 2019 Chris Ferdinandi, MIT License, https://gomakethings.com\n * Derived from work by Brian Suda, https://24ways.org/2010/calculating-color-contrast/\n * @see https://gomakethings.com/dynamically-changing-the-text-color-based-on-background-color-contrast-with-vanilla-js/\n * @param  {String} hexcolor A hexcolor value\n * @return {String} The contrasting color (black or white)\n * @since July 16, 2019\n * @author Chris Ferdinandi\n */\nexport function getContrast(hexcolor) {\n  // If a leading # is provided, remove it\n  if (hexcolor.slice(0, 1) === \"#\") {\n    hexcolor = hexcolor.slice(1);\n  }\n\n  // If a three-character hexcode, make six-character\n  if (hexcolor.length === 3) {\n    hexcolor = hexcolor\n      .split(\"\")\n      .map(function (hex) {\n        return hex + hex;\n      })\n      .join(\"\");\n  }\n\n  // Convert to RGB value\n  var r = parseInt(hexcolor.substr(0, 2), 16);\n  var g = parseInt(hexcolor.substr(2, 2), 16);\n  var b = parseInt(hexcolor.substr(4, 2), 16);\n\n  // Get YIQ ratio\n  var yiq = (r * 299 + g * 587 + b * 114) / 1000;\n\n  // Check contrast\n  return yiq >= 128 ? \"black\" : \"white\";\n}\n","import React from \"react\";\n\nimport \"./DefaultStanza.scss\";\n\nimport { getContrast } from \"../../utils/getContrast/getContrast\";\n\n/**\n * @function Stanza\n * @description One stanza of text in a scroll animation story.\n * @param props The JSX props passed to this React component\n * @param {React.Component} props.children The paragraphs to render in this\n * component\n * @param {string} props.background The background color to render on this\n * slide\n * @param {number} props.index The index of this stanza, to calculate the scroll\n * linked positioning of the element\n * @param {number} props.stanzaCount The total number of stanzas in this story\n * @param {string} props.bodyBackground The background color of the entire\n * screen for the duration this stanza is visible.\n * @author Alexander Burdiss\n * @since 6/4/21\n * @version 1.2.0\n * @component\n * @example\n * ```jsx\n * <Stanza>\n *   <p>Some text</p>\n * </Stanza>\n * ```\n */\nexport default function Stanza({ children, background, index, stanzaCount }) {\n  const oneIndexPercent = 100 / (stanzaCount + 2);\n\n  return (\n    <div>\n      <style>{`\n        #stanza${index} {\n          animation-name: stanza${index};\n          animation-duration: 1s;\n          animation-timing-function: ease-in-out;\n        }\n\n        @keyframes stanza${index} {\n          0% {\n            top: 100vh;\n          }\n          ${\n            index > 0\n              ? `${(index - 0.5) * oneIndexPercent}% {\n              top: 100vh;\n            }`\n              : \"\"\n          }\n          ${index * oneIndexPercent}% {\n            top: 34vh;\n          }\n          ${(index + 0.5) * oneIndexPercent}% {\n            top: 34vh;\n          }\n          ${(index + 1) * oneIndexPercent}% {\n            top: -100vh;\n          }\n          100% {\n            top: -100%;\n          }\n        }\n      `}</style>\n      <div\n        id={\"stanza\" + index}\n        className=\"ScrollAnimation-Stanza-Container\"\n        style={{\n          backgroundColor: background,\n          color: getContrast(background),\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n","/**\n * @function fade\n * @description Returns a string for a keyframes fade animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function fade(index, imageIndex, stanzaDuration, oneIndexPercent) {\n  return `@keyframes stanza${index}fade${imageIndex} {\n    0% {\n      opacity: 0;\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 0;\n    }\n  }`;\n}\n","/**\n * @function slidedown\n * @description Returns a string for a keyframes slide down animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slidedown(index, imageIndex, stanzaDuration, oneIndexPercent) {\n  return `@keyframes stanza${index}slidedown${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateY(50px);\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateY(150px);\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateY(200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateY(200px);\n    }\n  }`;\n}\n","/**\n * @function slideup\n * @description Returns a string for a keyframes slide up animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideup(index, imageIndex, stanzaDuration, oneIndexPercent) {\n  return `@keyframes stanza${index}slideup${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateY(-50px);\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateY(-150px);\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateY(-200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateY(-200px);\n    }\n  }`;\n}\n","/**\n * @function slideleft\n * @description Returns a string for a keyframes slide left animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideleft(index, imageIndex, stanzaDuration, oneIndexPercent) {\n  return `@keyframes stanza${index}slideleft${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0);\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-50px);\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-150px);\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(-200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(-200px);\n    }\n  }`;\n}\n","/**\n * @function slideright\n * @description Returns a string for a keyframes slide right animation with the\n * appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideright(index, imageIndex, stanzaDuration, oneIndexPercent) {\n  return `@keyframes stanza${index}slideright${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0);\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(50px);\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(150px);\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(200px);\n    }\n  }`;\n}\n","/**\n * @function slidedownleft\n * @description Returns a string for a keyframes slide down left animation with\n * the appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slidedownleft(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent\n) {\n  return `@keyframes stanza${index}slidedownleft${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0) translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0) translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-50px) translateY(50px);\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-150px) translateY(150px);\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(-200px) translateY(200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(-200px) translateY(200px);\n    }\n  }`;\n}\n","/**\n * @function slidedownright\n * @description Returns a string for a keyframes slide down right animation with\n * the appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slidedownright(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent\n) {\n  return `@keyframes stanza${index}slidedownright${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0) translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0) translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(50px) translateY(50px);\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(150px) translateY(150px);\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(200px) translateY(200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(200px) translateY(200px);\n    }\n  }`;\n}\n","/**\n * @function slideupleft\n * @description Returns a string for a keyframes slide up left animation with\n * the appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideupleft(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent\n) {\n  return `@keyframes stanza${index}slideupleft${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0) translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0) translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-50px) translateY(-50px);\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(-150px) translateY(-150px);\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(-200px) translateY(-200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(-200px) translateY(-200px);\n    }\n  }`;\n}\n","/**\n * @function slideupright\n * @description Returns a string for a keyframes slide up right animation with\n * the appropriate timing based on the image's placement in the story.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n * @param {number} index\n * @param {number} imageIndex\n * @param {number} stanzaDuration\n * @param {number} oneIndexPercent\n * @returns {string} A Keyframes animation that needs to be placed inside a\n * <style> tag\n */\nexport function slideupright(\n  index,\n  imageIndex,\n  stanzaDuration,\n  oneIndexPercent\n) {\n  return `@keyframes stanza${index}slideupright${imageIndex} {\n    0% {\n      opacity: 0;\n      transform: translateX(0) translateY(0);\n    }\n    ${\n      index > 0\n        ? `${(index - 0.5) * oneIndexPercent}% {\n        opacity: 0;\n        transform: translateX(0) translateY(0);\n      }`\n        : \"\"\n    }\n    ${index * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(50px) translateY(-50px);\n    }\n    ${(index + 0.5 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 1;\n      transform: translateX(150px) translateY(-150px);\n    }\n    ${(index + 1 * stanzaDuration) * oneIndexPercent}% {\n      opacity: 0;\n      transform: translateX(200px) translateY(-200px);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(200px) translateY(-200px);\n    }\n  }`;\n}\n","export default __webpack_public_path__ + \"static/media/AlaskaFlag.7e7b0af5.svg\";","export default __webpack_public_path__ + \"static/media/CaliforniaFlag.43c77053.svg\";","export default __webpack_public_path__ + \"static/media/CitySkyline.3adf5732.svg\";","export default __webpack_public_path__ + \"static/media/Corn.ee3a958f.svg\";","export default __webpack_public_path__ + \"static/media/Grass.aca7e4d2.svg\";","export default __webpack_public_path__ + \"static/media/Surfboard.9b7fcbfe.svg\";","export default __webpack_public_path__ + \"static/media/Swimsuit.5a1ae745.svg\";","export default __webpack_public_path__ + \"static/media/Umbrella.8a69f215.svg\";","export default __webpack_public_path__ + \"static/media/WaveOutline.afcbc1c9.svg\";","export default __webpack_public_path__ + \"static/media/BlueFlowers.835c7e42.svg\";","export default __webpack_public_path__ + \"static/media/CaveEntrance.79821ad1.svg\";","export default __webpack_public_path__ + \"static/media/CherryPie.5cb58bd8.svg\";","export default __webpack_public_path__ + \"static/media/Constellation1.af64ddd2.svg\";","export default __webpack_public_path__ + \"static/media/BlueKite.7fc7089e.svg\";","export default __webpack_public_path__ + \"static/media/Ramen.2873e3b9.svg\";","export default __webpack_public_path__ + \"static/media/Town.d82e6146.svg\";","export default __webpack_public_path__ + \"static/media/Treasure.14ad7938.svg\";","export default __webpack_public_path__ + \"static/media/Mountain.14b161b9.svg\";","export default __webpack_public_path__ + \"static/media/Sun.9a0bbc72.svg\";","export default __webpack_public_path__ + \"static/media/ActionBox.abbb1e96.svg\";","export default __webpack_public_path__ + \"static/media/Bed.9577669f.svg\";","export default __webpack_public_path__ + \"static/media/Constellation2.b9083cbe.svg\";","export default __webpack_public_path__ + \"static/media/Constellation3.de858f71.svg\";","export default __webpack_public_path__ + \"static/media/FullMoon.b1438497.svg\";","export default __webpack_public_path__ + \"static/media/Mountains.34c12af4.svg\";","export default __webpack_public_path__ + \"static/media/MountEverest.89cbb7f2.svg\";","export default __webpack_public_path__ + \"static/media/MusicNotes.6b696369.svg\";","export default __webpack_public_path__ + \"static/media/Oak.670a17e9.svg\";","export default __webpack_public_path__ + \"static/media/Penny.cf8190a2.svg\";","export default __webpack_public_path__ + \"static/media/PinkPoodle.e574ece7.svg\";","export default __webpack_public_path__ + \"static/media/Shrub1.8a8c754f.svg\";","export default __webpack_public_path__ + \"static/media/Shrub2.61269abb.svg\";","import React from \"react\";\n\nimport \"./StanzaImage.scss\";\n\n// Animations\nimport { fade } from \"./animations/fade/fade\";\nimport { slidedown } from \"./animations/slidedown/slidedown\";\nimport { slideup } from \"./animations/slideup/slideup\";\nimport { slideleft } from \"./animations/slideleft/slideleft\";\nimport { slideright } from \"./animations/slideright/slideright\";\nimport { slidedownleft } from \"./animations/slidedownleft/slidedownleft\";\nimport { slidedownright } from \"./animations/slidedownright/slidedownright\";\nimport { slideupleft } from \"./animations/slideupleft/slideupleft\";\nimport { slideupright } from \"./animations/slideupright/slideupright\";\n\n// Newport Nebraska\nimport AlaskaFlag from \"../../assets/images/AlaskaFlag.svg\";\nimport CaliforniaFlag from \"../../assets/images/CaliforniaFlag.svg\";\nimport CitySkyline from \"../../assets/images/CitySkyline.svg\";\nimport Corn from \"../../assets/images/Corn.svg\";\nimport Grass from \"../../assets/images/Grass.svg\";\nimport Surfboard from \"../../assets/images/Surfboard.svg\";\nimport Swimsuit from \"../../assets/images/Swimsuit.svg\";\nimport Umbrella from \"../../assets/images/Umbrella.svg\";\nimport WaveOutline from \"../../assets/images/WaveOutline.svg\";\n\n// Guide to Sunset\nimport BlueFlowers from \"../../assets/images/BlueFlowers.svg\";\nimport CaveEntrance from \"../../assets/images/CaveEntrance.svg\";\nimport CherryPie from \"../../assets/images/CherryPie.svg\";\nimport Constellation1 from \"../../assets/images/Constellation1.svg\";\nimport Kite from \"../../assets/images/BlueKite.svg\";\nimport Ramen from \"../../assets/images/Ramen.svg\";\nimport Town from \"../../assets/images/Town.svg\";\nimport Treasure from \"../../assets/images/Treasure.svg\";\nimport Mountain from \"../../assets/images/Mountain.svg\";\nimport Sun from \"../../assets/images/Sun.svg\";\nimport ActionBox from \"../../assets/images/ActionBox.svg\";\nimport Bed from \"../../assets/images/Bed.svg\";\nimport Constellation2 from \"../../assets/images/Constellation2.svg\";\nimport Constellation3 from \"../../assets/images/Constellation3.svg\";\nimport FullMoon from \"../../assets/images/FullMoon.svg\";\nimport Mountains from \"../../assets/images/Mountains.svg\";\nimport MountEverest from \"../../assets/images/MountEverest.svg\";\nimport MusicNotes from \"../../assets/images/MusicNotes.svg\";\nimport Oak from \"../../assets/images/Oak.svg\";\nimport Penny from \"../../assets/images/Penny.svg\";\nimport PinkPoodle from \"../../assets/images/PinkPoodle.svg\";\nimport Shrub1 from \"../../assets/images/Shrub1.svg\";\nimport Shrub2 from \"../../assets/images/Shrub2.svg\";\n\n/**\n * NOTE: This is different than the one in the Bedtime project!\n *\n *\n * @function stanzaImage\n * @description Displays One image for the stanza.\n * @param props The JSX props passed to this React component\n * @param {React.Component} props.children The image to render inside this\n * stanza.\n * @param {number} props.index The stanza index that this image is being\n * rendered with\n * @param {number} props.imageIndex The image index for the given stanza\n * @param {number} props.stanzaCount The number of Stanzas in this total\n * animation\n * @param {string} [props.animation='fade'] The animation type that will be\n * displayed on this component. Available animations are:\n * 'fade', 'slidedown', 'slideup', 'slideleft', 'slideright', 'slidedownleft',\n * 'slidedownright', 'slideupleft', 'slideupright'\n * @param {string} props.positionX The horizontal position of the image\n * relative to the rest of the scroll animation. Available positions are:\n * 'left', 'center', 'right'\n * @param {string} props.positionY The vertical position of the image relative\n * to the rest of the scroll animation. Available positions are:\n * 'top', 'center', 'bottom'\n * @param {number} props.stanzaDuration The number of stanzas that this image\n * should remain onscreen.\n * @author Alexander Burdiss\n * @since 7/10/21\n * @version 1.0.0\n */\nexport default function StanzaImage({\n  children,\n  index,\n  imageIndex,\n  stanzaCount,\n  animation = \"fade\",\n  positionX,\n  positionY,\n  stanzaDuration,\n}) {\n  const oneIndexPercent = 100 / (stanzaCount + 2);\n\n  return (\n    <div>\n      <style>{`\n        #stanza${index}Image${imageIndex} {\n          animation-name: stanza${index}${animation}${imageIndex};\n          animation-duration: 1s;\n          animation-timing-function: ease-in-out;\n        }\n\n        #stanza${index}Image${imageIndex} img {\n          height: 250px;\n        }\n\n        ${\n          animation === \"fade\"\n            ? fade(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n\n        ${\n          animation === \"slidedown\"\n            ? slidedown(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n\n        ${\n          animation === \"slideup\"\n            ? slideup(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n\n        ${\n          animation === \"slideleft\"\n            ? slideleft(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n\n        ${\n          animation === \"slideright\"\n            ? slideright(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n\n        ${\n          animation === \"slidedownleft\"\n            ? slidedownleft(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n\n        ${\n          animation === \"slidedownright\"\n            ? slidedownright(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n\n        ${\n          animation === \"slideupleft\"\n            ? slideupleft(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n\n        ${\n          animation === \"slideupright\"\n            ? slideupright(index, imageIndex, stanzaDuration, oneIndexPercent)\n            : \"\"\n        }\n      `}</style>\n      <div\n        id={`stanza${index}Image${imageIndex}`}\n        className=\"ScrollAnimation-StanzaImage-Container\"\n        style={{\n          right: { left: \"45%\", center: \"25%\", right: \"5%\" }[positionX],\n          top: { top: \"5%\", center: \"30%\", bottom: \"55%\" }[positionY],\n        }}\n      >\n        <img\n          src={\n            {\n              // Newport Nebraska\n              \"Alaska Flag\": AlaskaFlag,\n              \"California Flag\": CaliforniaFlag,\n              \"City Skyline\": CitySkyline,\n              Corn: Corn,\n              Grass: Grass,\n              Surfboard: Surfboard,\n              Swimsuit: Swimsuit,\n              Umbrella: Umbrella,\n              \"Wave Outline\": WaveOutline,\n              // Guide to Sunset\n              \"Blue Flowers\": BlueFlowers,\n              \"Cave Entrance\": CaveEntrance,\n              \"Cherry Pie\": CherryPie,\n              \"Constellation 1\": Constellation1,\n              Kite: Kite,\n              Ramen: Ramen,\n              Town: Town,\n              Treasure: Treasure,\n              Mountain: Mountain,\n              Sun: Sun,\n              \"Action Box\": ActionBox,\n              Bed: Bed,\n              \"Constellation 2\": Constellation2,\n              \"Constellation 3\": Constellation3,\n              \"Full Moon\": FullMoon,\n              Mountains: Mountains,\n              \"Mount Everest\": MountEverest,\n              \"Music Notes\": MusicNotes,\n              Oak: Oak,\n              Penny: Penny,\n              \"Pink Poodle\": PinkPoodle,\n              \"Shrub 1\": Shrub1,\n              \"Shrub 2\": Shrub2,\n            }[children]\n          }\n          alt={children}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Stanza from \"../DefaultStanza/DefaultStanza\";\nimport StanzaImage from \"../StanzaImage/StanzaImage\";\n\n/**\n * @function Body\n * @description The body of an animated story, used for grouping the logic\n * together for easier implementation of an animated story.\n * @author Alexander Burdiss\n * @since 7/8/21\n * @version 1.0.0\n * @param props The JSX props passed to this React component\n * @param {string} props.defaultBackgroundColor The default background color\n * for the body to be used when none is present on a stanza.\n * @param {string} props.stanzaBackgroundColor The default color of the stanzas\n * to be used throughout the animation.\n * @param {Object[]} props.stanzas An array of stanzas, to be iterated through\n * in the body of an animated story.\n */\nexport default function Body({\n  stanzaBackgroundColor,\n  stanzas,\n  defaultBackgroundColor,\n  stanzaType = \"default\",\n}) {\n  const oneIndexPercent = 100 / (stanzas.length + 2);\n\n  function getBodyAnimation() {\n    let bodyAnimationString = \"\";\n    stanzas.forEach((stanza, index) => {\n      bodyAnimationString += `${(index + 1) * oneIndexPercent}% {\n          background: ${\n            stanza.background ? stanza.background : defaultBackgroundColor\n          }\n        }\n        ${(index + 1.5) * oneIndexPercent}% {\n          background: ${\n            stanza.background ? stanza.background : defaultBackgroundColor\n          }\n        }\n        `;\n    });\n    return bodyAnimationString;\n  }\n\n  return (\n    <div>\n      <style>{`\n        #page {\n          animation-name: scrollBody;\n          animation-duration: 1s;\n          animation-timing-function: ease-in-out;\n        }\n\n        @keyframes scrollBody {\n          ${getBodyAnimation()}\n        }\n      `}</style>\n      {stanzas.map((stanza, index) => {\n        return (\n          <div key={index}>\n            {\n              {\n                default: (\n                  <Stanza\n                    index={index + 1}\n                    background={stanzaBackgroundColor}\n                    stanzaCount={stanzas.length}\n                    bodyBackground={\n                      stanza.background\n                        ? stanza.background\n                        : defaultBackgroundColor\n                    }\n                  >\n                    {stanza.stanza}\n                  </Stanza>\n                ),\n              }[stanzaType]\n            }\n            {stanza.images?.map((imageObject, imageIndex) => {\n              return (\n                <StanzaImage\n                  index={index + 1}\n                  imageIndex={imageIndex}\n                  stanzaCount={stanzas.length}\n                  key={\"\" + index + imageIndex}\n                  animation={imageObject.animation}\n                  positionX={imageObject.positionX}\n                  positionY={imageObject.positionY}\n                  stanzaDuration={imageObject.stanzaCount}\n                >\n                  {imageObject.component}\n                </StanzaImage>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\n\n/**\n * @function ScrollAnimation\n * @description A container for one Scroll Animation that handles the styles and\n * different logistical elements for a scroll animation poem. This should be\n * used in conjunction with `Stanza`, `Title`, and `Attribution`.\n * @param props The JSX props passed to this React component\n * @param {React.Component} props.children The parts of the poem to render on the\n * screen\n * @param {string} props.bodyStyleMinHeight The minimum height of the screen,\n * preferrably in Viewport heights that will be attached to the body.\n * @author Alexander Burdiss\n * @since 6/26/21\n * @version 1.0.0\n * @component\n * @example\n * ```jsx\n * <ScrollAnimation bodyStyleMinHeight=\"4000vh\">\n *   <Title background={stanzaBackgroundColor} author=\"Daniel Stigmon\">\n *     The Guide to Sunset\n *   </Title>\n *   {...}\n * </ScrollAnimation>\n * ```\n */\nexport default function ScrollAnimation({ children, bodyStyleMinHeight }) {\n  useEffect(() => {\n    document.querySelector(\"#page\").style.minHeight = bodyStyleMinHeight;\n    function handleScroll() {\n      document.body.style.setProperty(\n        \"--scroll\",\n        window.pageYOffset /\n          (document.querySelector(\"#page\").offsetHeight - window.innerHeight)\n      );\n    }\n    handleScroll();\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n      document.querySelector(\"#page\").style.minHeight = \"\";\n      document.body.style.removeProperty(\"--scroll\");\n    };\n  }, [bodyStyleMinHeight]);\n\n  return (\n    <div className=\"ScrollAnimation-Container\">\n      {/* Styles for the global object, just on this page */}\n      <style>{`\n        :root * {\n          /* Pause the animation */\n          animation-play-state: paused;\n          /* Bind the animation to scroll */\n          animation-delay: calc(var(--scroll) * -1s);\n          /* These last 2 properites clean up overshoot weirdness */\n          animation-iteration-count: 1;\n          animation-fill-mode: both;\n        }\n      `}</style>\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./DefaultAttribution.scss\";\n\nimport { getContrast } from \"../../utils/getContrast/getContrast\";\n\n/**\n * @namespace DefaultAttribution\n * @function DefaultAttribution\n * @description The final slide of text on a scroll animation\n * @author Alexander Burdiss\n * @since 6/5/21\n * @version 1.2.0\n * @param props The JSX props passed to this React component\n * @param {React.Component} props.children The text to render on this component\n * @param {string} props.background The background to render on this component\n * @param {number} props.stanzaCount The number of Stanzas that are in the\n * current scroll animation poem.\n */\nexport default function DefaultAttribution({\n  children,\n  background,\n  stanzaCount,\n  backlink,\n}) {\n  const oneIndexPercent = 100 / (stanzaCount + 2);\n  return (\n    <div>\n      <style>{`\n        #attribution {\n          animation-name: attribution;\n          animation-duration: 1s;\n          animation-timing-function: ease-in-out;\n        }\n\n        @keyframes attribution {\n          0% {\n            top: 100vh;\n          }\n          ${(stanzaCount + 1) * oneIndexPercent}% {\n            top: 100vh;\n          }\n          100% {\n            top: 25vh;\n          }\n        }\n      `}</style>\n      <div\n        className=\"ScrollAnimation-Attribution-Container\"\n        style={{ backgroundColor: background }}\n        id=\"attribution\"\n      >\n        <div\n          className=\"ScrollAnimation-Attribution-Border\"\n          style={{\n            color: getContrast(background),\n          }}\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./DefaultTitle.scss\";\n\nimport { getContrast } from \"../../utils/getContrast/getContrast\";\n\n/**\n * @function DefaultTitle\n * @description The title component for a scroll animation. Styled similarly to\n * a stanza\n * @author Alexander Burdiss\n * @since 6/4/21\n * @version 1.1.0\n * @param props The JSX props passed to this React component\n * @param {String} props.children The title of the scroll animation to render\n * @param {String} props.background The color of the background for this title\n * component\n * @param {String} props.author The author of the poem\n */\nexport default function DefaultTitle({ children, background, author }) {\n  return (\n    <div\n      className=\"ScrollAnimation-Title-Container\"\n      style={{\n        backgroundColor: background,\n      }}\n    >\n      <div\n        className=\"ScrollAnimation-Title-Border\"\n        style={{\n          color: getContrast(background),\n        }}\n      >\n        <h1>{children}</h1>\n        <h2>{author}</h2>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Body from \"../../ScrollAnimation/Body/Body\";\nimport ScrollAnimation from \"../../ScrollAnimation/ScrollAnimation\";\nimport Attribution from \"../../ScrollAnimation/DefaultAttribution/DefaultAttribution\";\nimport Title from \"../../ScrollAnimation/DefaultTitle/DefaultTitle\";\n\nimport \"./Content.scss\";\n\nexport default function Content({ story, backgroundColor }) {\n  const stanzaBackgroundColor = \"#8bc9e4\";\n\n  return (\n    <div id={\"page\"} className=\"Content-Wrap\">\n      <ScrollAnimation bodyStyleMinHeight={`${story.length * 100}vh`}>\n        <Title background={stanzaBackgroundColor} author=\"FostyWally\">\n          A Scroll Animation\n        </Title>\n        <Body\n          stanzas={story}\n          stanzaBackgroundColor={stanzaBackgroundColor}\n          defaultBackgroundColor={backgroundColor}\n          stanzaType=\"default\"\n        />\n        <Attribution\n          background={stanzaBackgroundColor}\n          stanzaCount={story.length}\n          backlink={\"/poems/tales/\"}\n        >\n          <p>Written by FostyWally</p>\n          <p>Animated by Captain Code 😎</p>\n        </Attribution>\n      </ScrollAnimation>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Field } from \"formik\";\n\n/**\n * @namespace ImageRepeatable\n * @function ImageRepeatable\n * @description A repeatable image form field.\n * @author Alexander Burdiss\n * @since 8/1/21\n * @version 1.0.0\n * @param {*} props The JSX props passed to this React component\n * @param {number} props.index The index of the stanza this image form section\n * is in\n * @param {number} props.imageindex The index that this image is in the form\n * @param {Object} props.imageHelpers A collection of functions that can adjust\n * the form layout in relation to these images.\n */\nexport default function ImageRepeatable({ index, imageindex, imageHelpers }) {\n  return (\n    <fieldset key={index + \"\" + imageindex} className=\"Form-Image-Container\">\n      <button\n        type=\"button\"\n        className=\"secondary\"\n        onClick={() => {\n          imageHelpers.remove(imageindex);\n        }}\n      >\n        X\n      </button>\n      <legend className=\"blue\">Image {imageindex + 1}</legend>\n      <div className=\"Label-Input-Group First\">\n        <label htmlFor={`stanzas.${index}.images.${imageindex}.component`}>\n          Image\n        </label>\n        <Field\n          name={`stanzas.${index}.images.${imageindex}.component`}\n          as=\"select\"\n        >\n          <optgroup label=\"Newport Nebraska\">\n            <option>Alaska Flag</option>\n            <option>California Flag</option>\n            <option>City Skyline</option>\n            <option>Corn</option>\n            <option>Grass</option>\n            <option>Surfboard</option>\n            <option>Swimsuit</option>\n            <option>Umbrella</option>\n            <option>Wave Outline</option>\n          </optgroup>\n          <optgroup label=\"Guide to Sunset\">\n            <option>Action Box</option>\n            <option>Bed</option>\n            <option>Blue Flowers</option>\n            <option>Cave Entrance</option>\n            <option>Cherry Pie</option>\n            <option>Constellation 1</option>\n            <option>Constellation 2</option>\n            <option>Constellation 3</option>\n            <option>Full Moon</option>\n            <option>Kite</option>\n            <option>Mountain</option>\n            <option>Mountains</option>\n            <option>Mount Everest</option>\n            <option>Music Notes</option>\n            <option>Oak</option>\n            <option>Penny</option>\n            <option>Pink Poodle</option>\n            <option>Ramen</option>\n            <option>Shrub 1</option>\n            <option>Shrub 2</option>\n            <option>Sun</option>\n            <option>Town</option>\n            <option>Treasure</option>\n          </optgroup>\n        </Field>\n      </div>\n      <div className=\"Label-Input-Group\">\n        <label htmlFor={`stanzas.${index}.images.${imageindex}.positionY`}>\n          Vertical\n        </label>\n        <Field\n          name={`stanzas.${index}.images.${imageindex}.positionY`}\n          as=\"select\"\n        >\n          <option value=\"top\">Top</option>\n          <option value=\"center\">Center</option>\n          <option value=\"bottom\">Bottom</option>\n        </Field>\n      </div>\n      <div className=\"Label-Input-Group\">\n        <label htmlFor={`stanzas.${index}.images.${imageindex}.positionX`}>\n          Horizontal\n        </label>\n        <Field\n          name={`stanzas.${index}.images.${imageindex}.positionX`}\n          as=\"select\"\n        >\n          <option value=\"left\">Left</option>\n          <option value=\"center\">Center</option>\n          <option value=\"right\">Right</option>\n        </Field>\n      </div>\n      <div className=\"Label-Input-Group\">\n        <label htmlFor={`stanzas.${index}.images.${imageindex}.animation`}>\n          Animation\n        </label>\n        <Field\n          name={`stanzas.${index}.images.${imageindex}.animation`}\n          as=\"select\"\n        >\n          <option value=\"fade\">Fade</option>\n          <option value=\"slidedown\">Slide Down</option>\n          <option value=\"slideup\">Slide Up</option>\n          <option value=\"slideleft\">Slide Left</option>\n          <option value=\"slideright\">Slide Right</option>\n          <option value=\"slidedownleft\">Slide Down Left</option>\n          <option value=\"slidedownright\">Slide Down Right</option>\n          <option value=\"slideupleft\">Slide Up Left</option>\n          <option value=\"slideupright\">Slide Up Right</option>\n        </Field>\n      </div>\n      <div className=\"Label-Input-Group\">\n        <label htmlFor={`stanzas.${index}.images.${imageindex}.stanzaCount`}>\n          Stanza Count\n        </label>\n        <Field\n          name={`stanzas.${index}.images.${imageindex}.stanzaCount`}\n          type=\"number\"\n        />\n      </div>\n    </fieldset>\n  );\n}\n","import React from \"react\";\n\nimport { Field, FieldArray } from \"formik\";\nimport ImageRepeatable from \"../ImageRepeatable/ImageRepeatable\";\n\n/**\n * @namespace StanzaRepeatable\n * @description A repeatable stanza, that provides all of the options for a\n * stanza on the form.\n * @author Alexander Burdiss\n * @since 8/1/21\n * @version 1.0.0\n * @param {*} props The JSX props passed to this React component\n * @param {number} props.index The index of this stanza in the form\n * @param {Object} props.stanza The object containing the data for this stanza\n * @param {Object} props.stanzaHelpers The functions handling adjusting the\n * form layout for the stanzas\n */\nexport default function StanzaRepeatable({ index, stanza, stanzaHelpers }) {\n  return (\n    <div className=\"Form-Stanza-Container\" key={index}>\n      <button\n        type=\"button\"\n        className=\"secondary\"\n        onClick={() => stanzaHelpers.remove(index)}\n      >\n        X\n      </button>\n      <label htmlFor={`stanzas.${index}.stanza`} className=\"blue\">\n        Stanza {index + 1}\n      </label>\n      <Field\n        name={`stanzas.${index}.stanza`}\n        placeholder=\"Enter your stanza text here.\"\n        as=\"textarea\"\n        rows=\"6\"\n        cols=\"30\"\n      />\n      <FieldArray name={`stanzas.${index}.images`}>\n        {(imageHelpers) => (\n          <>\n            {stanza.images.length\n              ? stanza.images.map((image, imageindex) => (\n                  <ImageRepeatable\n                    index={index}\n                    imageindex={imageindex}\n                    imageHelpers={imageHelpers}\n                  />\n                ))\n              : null}\n            <button\n              type=\"button\"\n              onClick={() =>\n                imageHelpers.push({\n                  component: undefined,\n                  positionX: \"center\",\n                  positionY: \"center\",\n                  animation: \"fade\",\n                  stanzaCount: 1,\n                })\n              }\n            >\n              Add Image\n            </button>\n          </>\n        )}\n      </FieldArray>\n      <div className=\"Background-Label-Input\">\n        <label htmlFor={`stanzas.${index}.stanza`}>Background</label>\n        <Field name={`stanzas.${index}.background`} type=\"text\" />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Formik, Form, FieldArray } from \"formik\";\n\nimport \"./Form.scss\";\nimport StanzaRepeatable from \"./StanzaRepeatable/StanzaRepeatable\";\n\n/**\n * @namespace Form\n * @function Form\n * @description The form that is used to create an animated story.\n * @see https://codesandbox.io/s/github/formik/formik/tree/master/examples/field-arrays?from-embed=&file=/index.js:1981-2244\n * @author Alexander Burdiss\n * @since 7/11/21\n * @version 2.0.1\n */\nexport default function BTForm({\n  story,\n  setStory,\n  backgroundColor,\n  setBackgroundColor,\n}) {\n  const [fileUpload, setFileUpload] = useState(null);\n\n  /**\n   * @function Form~useFile\n   * @description Sets the uploaded file to the state variable, and calls\n   * a function to load that file into state.\n   * @author Alexander Burdiss\n   * @since 7/20/21\n   * @version 1.0.0\n   */\n  function useFile() {\n    if (fileUpload != null) {\n      const reader = new FileReader();\n      reader.onload = setFileToGlobalState;\n      reader.readAsText(fileUpload);\n    } else {\n      alert(\"Upload a file first!\");\n    }\n  }\n\n  /**\n   * @function setFileToGlobalState\n   * @description Loads the uploaded file into global state.\n   * @param {event} event The event that triggered the FileReader\n   * @author Alexander Burdiss\n   * @since 7/20/21\n   * @version 1.0.0\n   */\n  function setFileToGlobalState(event) {\n    const json = JSON.parse(event.target.result);\n    setStory(json);\n  }\n\n  /**\n   * @function Form~triggerDownload\n   * @description Creates a new JSON blob from the state object, and downloads\n   * it.\n   * @author Alexander Burdiss\n   * @since 7/20/21\n   * @version 1.0.0\n   */\n  function triggerDownload() {\n    const json = JSON.stringify(story);\n    const blob = new Blob([json]);\n    const fileDownloadUrl = URL.createObjectURL(blob);\n    const downloadButton = document.querySelector(\"#downloadLink\");\n    downloadButton.href = fileDownloadUrl;\n    downloadButton.click();\n  }\n\n  return (\n    <div className=\"Form-Container\">\n      <Formik\n        initialValues={{\n          stanzas: story,\n        }}\n        enableReinitialize\n        onSubmit={(values) => {\n          setStory(values.stanzas);\n        }}\n      >\n        {({ values }) => (\n          <>\n            <Form>\n              <div className=\"Form\">\n                <div>[Default Stanza Background Color]</div>\n                <input\n                  value={backgroundColor}\n                  onChange={(e) => setBackgroundColor(e.target.value)}\n                />\n\n                <FieldArray name=\"stanzas\">\n                  {(stanzaHelpers) => (\n                    <div>\n                      {values.stanzas.length\n                        ? values.stanzas.map((stanza, index) => (\n                            <StanzaRepeatable\n                              index={index}\n                              stanza={stanza}\n                              stanzaHelpers={stanzaHelpers}\n                            />\n                          ))\n                        : null}\n                      <div>\n                        <button\n                          type=\"button\"\n                          onClick={() =>\n                            stanzaHelpers.push({\n                              stanza: \"\",\n                              images: [],\n                              background: backgroundColor,\n                            })\n                          }\n                        >\n                          Add Stanza\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </FieldArray>\n              </div>\n              <div className=\"Save-Button-Container\">\n                <input\n                  className=\"File-Upload\"\n                  type=\"file\"\n                  accept=\"application/json\"\n                  onChange={(event) => setFileUpload(event.target.files[0])}\n                />\n                <button type=\"button\" className=\"Save-Button\" onClick={useFile}>\n                  Upload\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"Save-Button\"\n                  onClick={triggerDownload}\n                >\n                  Download\n                </button>\n                <button type=\"submit\" className=\"Save-Button Green-Button\">\n                  Render\n                </button>\n              </div>\n              {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n              <a\n                style={{ display: \"none\" }}\n                download={`story${new Date().toLocaleDateString()}${new Date().toLocaleTimeString()}.json`}\n                href={\"\"}\n                id=\"downloadLink\"\n              >\n                download it\n              </a>\n            </Form>\n          </>\n        )}\n      </Formik>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport Content from \"./Content/Content\";\n\nimport Form from \"./Form/Form\";\nimport \"./ScrollAnimationCreator.scss\";\n\n/**\n * @function ScrollAnimationCreator\n * @author Alexander Burdiss\n * @since 7/11/21\n * @version 1.0.0\n */\nexport default function ScrollAnimationCreator() {\n  const [story, setStory] = useState([]);\n  const [backgroundColor, setBackgroundColor] = useState(\"#DDDDDD\");\n\n  return (\n    <div id={\"wrapper\"}>\n      <Menu pageWrapId={\"page\"} outerContainerId={\"wrapper\"}>\n        <Form\n          story={story}\n          setStory={setStory}\n          backgroundColor={backgroundColor}\n          setBackgroundColor={setBackgroundColor}\n        />\n      </Menu>\n      <Content story={story} backgroundColor={backgroundColor} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport ScrollAnimationCreator from \"./ScrollAnimationCreator/ScrollAnimationCreator\";\n\n/**\n * @function App\n * @description The Root of the animated story creator application. This\n * component is rendered directly in strict mode in index.js\n * @author Alexander Burdiss\n * @since 7/11/21\n * @version 1.0.0\n */\nexport default function App() {\n  return (\n    <div>\n      <ScrollAnimationCreator />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}